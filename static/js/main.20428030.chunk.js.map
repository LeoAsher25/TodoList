{"version":3,"sources":["contexts/ThemeContextProvider.js","AddTodoBox/index.jsx","TodoItem/index.jsx","TodoList/index.jsx","ToggleThemeBtn/index.jsx","FunctionBtnWrap/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","React","createContext","ThemeContextProvider","props","useState","isLightTheme","ligthTheme","bgColor","color","bgColorBtn","darkTheme","theme","setTheme","useEffect","localTheme","localStorage","getItem","JSON","parse","setItem","stringify","themeDatas","toggleTheme","newTheme","Provider","value","children","AddTodoBox","newTodo","isEditting","setIsEditting","optionLevels","setNewTodo","setAddBoxIsOpen","handleAddTodoBoxSubmit","useContext","style","inputIsEmpty","setInputIsEmpty","handleOnChange","e","target","name","handleCloseBox","preventDefault","id","level","className","onClick","backgroundColor","Form","Group","md","Label","htmlFor","Control","required","type","onChange","placeholder","autoComplete","Select","map","option","index","titleLevel","trim","handleFormSubmit","TodoItem","todo","indexOfTodo","handleRemoveTodo","handleSetIsEditting","handleChangeLevel","disableUpLevel","setUpLevel","disableDownLevel","setDownLevel","findIndex","item","length","Badge","bg","opacity","TodoList","processedTodos","Table","bordered","borderColor","width","ToggleThemeBtn","ToggleThemeRef","useRef","current","classList","add","ref","toggle","FunctionBtnWrap","sortTypesList","handleSortFormOnSubmit","handleFilterFormOnSubmit","handleSearchFormOnSubmit","selectSortRef","selectFilterRef","searchInputRef","Row","Col","xs","sm","Button","onSubmit","handleSearchInputSubmit","action","variant","default","sortType","filterType","App","currentSortType","setCurrentSortType","currentFilterType","setCurrentFilterType","orderLevel","todos","setTodos","setProcessedTodos","localTodos","addBoxIsOpen","sorting","Todos","tmpTodos","sort","t1","t2","t1name","toLowerCase","t2name","filtering","filter","Container","hidden","splice","uuidv1","searchTerm","searchedTodos","forEach","toString","includes","push","newTodos","changeType","indexInOptionLevels","href","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20428030.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport const ThemeContext = React.createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n  const [theme, setTheme] = useState({\r\n    isLightTheme: true,\r\n    ligthTheme: {\r\n      bgColor: \"#f2f2f2\",\r\n      color: \"#111\",\r\n      bgColorBtn: \"#83D8FF\",\r\n    },\r\n    darkTheme: {\r\n      bgColor: \"#333\",\r\n      color: \"#eee\",\r\n      bgColorBtn: \"#749DD6\",\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    let localTheme = localStorage.getItem(\"Theme\");\r\n    if (localTheme) {\r\n      setTheme(JSON.parse(localTheme));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"Theme\", JSON.stringify(theme));\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    let newTheme = { ...theme };\r\n    newTheme.isLightTheme = !newTheme.isLightTheme;\r\n    setTheme(newTheme);\r\n  };\r\n\r\n  const themeDatas = {\r\n    theme,\r\n    toggleTheme,\r\n  };\r\n  return (\r\n    <ThemeContext.Provider value={themeDatas}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n","import React, { useContext, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./AddTodoBox.scss\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { ThemeContext } from \"../contexts/ThemeContextProvider\";\r\n\r\nconst AddTodoBox = (props) => {\r\n  const {\r\n    newTodo,\r\n    isEditting,\r\n    setIsEditting,\r\n    optionLevels,\r\n    setNewTodo,\r\n    setAddBoxIsOpen,\r\n    handleAddTodoBoxSubmit,\r\n  } = props;\r\n\r\n  const { theme } = useContext(ThemeContext);\r\n  const { isLightTheme, ligthTheme, darkTheme } = theme;\r\n  const style = isLightTheme ? ligthTheme : darkTheme;\r\n\r\n  const [inputIsEmpty, setInputIsEmpty] = useState(false);\r\n\r\n  // handle when form submitted\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (newTodo.name.trim() !== \"\") {\r\n      handleAddTodoBoxSubmit();\r\n\r\n      setAddBoxIsOpen(false);\r\n      setInputIsEmpty(false);\r\n    } else {\r\n      setInputIsEmpty(true);\r\n    }\r\n  };\r\n\r\n  // handle when input or select ele change\r\n  const handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setInputIsEmpty(false);\r\n\r\n    setNewTodo({\r\n      ...newTodo,\r\n      [name]: name === \"name\" ? value : JSON.parse(value),\r\n    });\r\n  };\r\n\r\n  const handleCloseBox = (e) => {\r\n    e.preventDefault();\r\n    setAddBoxIsOpen(false);\r\n    setIsEditting(false);\r\n    setNewTodo({\r\n      id: 0,\r\n      name: \"\",\r\n      level: optionLevels[0],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-todo-wrap\">\r\n      <div className=\"overlay\" onClick={() => setAddBoxIsOpen(false)}></div>\r\n      <div\r\n        className=\"add-todo-box\"\r\n        style={{ backgroundColor: style.bgColor, color: style.color }}\r\n      >\r\n        <Form className=\"form-wrap\">\r\n          <span className=\"close-box\" onClick={(e) => handleCloseBox(e)}>\r\n            &times;\r\n          </span>\r\n          <h3 className=\"heading\">\r\n            {isEditting ? \"Edit công việc\" : \"Thêm công việc mới: \"}{\" \"}\r\n          </h3>\r\n          <Form.Group md=\"4\" className=\"form-gr\">\r\n            <Form.Label htmlFor=\"todoName\">Tên công việc</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              id=\"todoName\"\r\n              name=\"name\"\r\n              value={newTodo.name}\r\n              onChange={(e) => handleOnChange(e)}\r\n              placeholder=\"Nhập công việc\"\r\n              autoComplete=\"off\"\r\n              style={{ backgroundColor: style.bgColor, color: style.color }}\r\n            />\r\n            {inputIsEmpty ? (\r\n              <div className=\"input-empty-alert\">\r\n                Tên công việc không được để trống!\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"form-gr\">\r\n            <Form.Label htmlFor=\"todoLevel\">Mức độ</Form.Label>\r\n            <Form.Select\r\n              aria-label=\"Default select example\"\r\n              id=\"todoLevel\"\r\n              name=\"level\"\r\n              value={JSON.stringify(newTodo.level)}\r\n              onChange={(e) => handleOnChange(e)}\r\n              style={{ backgroundColor: style.bgColor, color: style.color }}\r\n            >\r\n              {optionLevels.map((option, index) => (\r\n                <option key={index} value={JSON.stringify(option)}>\r\n                  {option.titleLevel}{\" \"}\r\n                </option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form.Group>\r\n\r\n          <div className=\"btn-wrap\">\r\n            <button type=\"submit\" onClick={(e) => handleFormSubmit(e)}>\r\n              {!isEditting ? \"Thêm\" : \"Save\"}\r\n            </button>\r\n            <button\r\n              onClick={(e) => {\r\n                return handleCloseBox(e);\r\n              }}\r\n            >\r\n              Hủy bỏ\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddTodoBox.propTypes = {\r\n  newTodo: PropTypes.object,\r\n  isEditting: PropTypes.bool,\r\n  optionLevels: PropTypes.array,\r\n  setNewTodo: PropTypes.func,\r\n  setAddBoxIsOpen: PropTypes.func,\r\n  handleAddTodoBoxSubmit: PropTypes.func,\r\n};\r\n\r\nexport default AddTodoBox;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Badge } from \"react-bootstrap\";\r\n\r\nconst TodoItem = (props) => {\r\n  const {\r\n    todo,\r\n    indexOfTodo,\r\n    optionLevels,\r\n    handleRemoveTodo,\r\n    handleSetIsEditting,\r\n    handleChangeLevel,\r\n  } = props;\r\n\r\n  const [disableUpLevel, setUpLevel] = useState(0.8);\r\n  const [disableDownLevel, setDownLevel] = useState(0.8);\r\n\r\n  useEffect(() => {\r\n    const index = optionLevels.findIndex(\r\n      (item) => item.titleLevel === todo.level.titleLevel\r\n    );\r\n    setUpLevel(index === optionLevels.length - 1 ? 0.2 : 0.8);\r\n    setDownLevel(index === 0 ? 0.2 : 0.8);\r\n  }, []);\r\n\r\n  return (\r\n    <tr className=\"todo-item\">\r\n      <td>\r\n        <span>{indexOfTodo + 1}</span>\r\n      </td>\r\n      <td>\r\n        <span>{todo.name}</span>\r\n      </td>\r\n      <td className=\"level-box\">\r\n        <Badge bg={todo.level.bgColor}>{todo.level.titleLevel}</Badge>\r\n\r\n        <div className=\"change-level\">\r\n          <span\r\n            style={{ opacity: disableUpLevel }}\r\n            onClick={() =>\r\n              handleChangeLevel(\"Increase\", todo, setUpLevel, setDownLevel)\r\n            }\r\n          >\r\n            <i className=\"fas fa-chevron-up\"></i>\r\n          </span>\r\n          <span\r\n            style={{ opacity: disableDownLevel }}\r\n            onClick={() =>\r\n              handleChangeLevel(\"Decrease\", todo, setUpLevel, setDownLevel)\r\n            }\r\n          >\r\n            <i className=\"fas fa-chevron-down\"></i>\r\n          </span>\r\n        </div>\r\n      </td>\r\n      <td className=\"action-wrap \">\r\n        <button className=\"edit-todo\" onClick={() => handleSetIsEditting(todo)}>\r\n          <span>Sửa</span>\r\n        </button>\r\n        <button\r\n          className=\"remove-todo\"\r\n          onClick={() => handleRemoveTodo(todo.id)}\r\n        >\r\n          <span>Xóa</span>\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object,\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TodoItem from \"../TodoItem\";\r\nimport \"./TodoList.scss\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { ThemeContext } from \"../contexts/ThemeContextProvider\";\r\n\r\nconst TodoList = (props) => {\r\n  // const { todos, setTodos, handleSetIsEditting, optionLevels } = props;\r\n  const {\r\n    processedTodos,\r\n    optionLevels,\r\n    handleRemoveTodo,\r\n    handleSetIsEditting,\r\n    handleChangeLevel,\r\n  } = props;\r\n\r\n  const { theme } = useContext(ThemeContext);\r\n  const { isLightTheme, ligthTheme, darkTheme } = theme;\r\n  const style = isLightTheme ? ligthTheme : darkTheme;\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      {/* <table border=\"1\" cellPadding=\"0\" cellSpacing=\"0\"> */}\r\n      <Table\r\n        bordered\r\n        style={{ backgroundColor: style.bgColor, color: style.color, borderColor: \"#aaa\" }}\r\n      >\r\n        <thead>\r\n          <tr className=\"table-header\">\r\n            <th width=\"20\">STT</th>\r\n            <th width=\"250\">Tên công việc</th>\r\n            <th width=\"250\">Mức độ</th>\r\n            <th width=\"200\">Hành động</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {processedTodos.map((todo, index) => (\r\n            <TodoItem\r\n              key={todo.id}\r\n              todo={todo}\r\n              indexOfTodo={index}\r\n              optionLevels={optionLevels}\r\n              handleRemoveTodo={handleRemoveTodo}\r\n              handleSetIsEditting={handleSetIsEditting}\r\n              handleChangeLevel={handleChangeLevel}\r\n            />\r\n          ))}\r\n        </tbody>\r\n        {/* </table> */}\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nTodoList.propTypes = {\r\n  processedTodos: PropTypes.array,\r\n  handleRemoveTodo: PropTypes.func,\r\n  handleSetIsEditting: PropTypes.func,\r\n  handleChangeLevel: PropTypes.func,\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport \"./ToggleThemeBtn.scss\";\r\n\r\nconst ToggleThemeBtn = (props) => {\r\n  const { toggleTheme, isLightTheme, bgColorBtn } = props;\r\n\r\n  const ToggleThemeRef = useRef(null);\r\n\r\n  const handleToggleTheme = () => {\r\n    ToggleThemeRef.current.classList.toggle(\"active\");\r\n    toggleTheme();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isLightTheme) {\r\n      ToggleThemeRef.current.classList.add(\"active\");\r\n    }\r\n  }, [isLightTheme]);\r\n\r\n  return (\r\n    <div\r\n      ref={ToggleThemeRef}\r\n      htmlFor=\"dn\"\r\n      className=\"toggle\"\r\n      onClick={() => handleToggleTheme()}\r\n      style={{ backgroundColor: bgColorBtn }}\r\n    >\r\n      <div className=\"toggle__handler\">\r\n        <span className=\"crater crater--1\"></span>\r\n        <span className=\"crater crater--2\"></span>\r\n        <span className=\"crater crater--3\"></span>\r\n      </div>\r\n      <span className=\"star star--1\"></span>\r\n      <span className=\"star star--2\"></span>\r\n      <span className=\"star star--3\"></span>\r\n      <span className=\"star star--4\"></span>\r\n      <span className=\"star star--5\"></span>\r\n      <span className=\"star star--6\"></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToggleThemeBtn;\r\n","import React, { useRef, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./FunctionBtnWrap.scss\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { ThemeContext } from \"../contexts/ThemeContextProvider\";\r\nimport ToggleThemeBtn from \"../ToggleThemeBtn\";\r\n\r\nconst FunctionBtnWrap = (props) => {\r\n  const {\r\n    sortTypesList,\r\n    optionLevels,\r\n    setAddBoxIsOpen,\r\n    handleSortFormOnSubmit,\r\n    handleFilterFormOnSubmit,\r\n    handleSearchFormOnSubmit,\r\n  } = props;\r\n\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n  const { isLightTheme, ligthTheme, darkTheme } = theme;\r\n  const style = isLightTheme ? ligthTheme : darkTheme;\r\n\r\n  const bgColorBtn = isLightTheme ? \"#83D8FF\" : \"#749DD6\";\r\n\r\n  // declare DOM ref\r\n  const selectSortRef = useRef(null);\r\n  const selectFilterRef = useRef(null);\r\n  const searchInputRef = useRef(null);\r\n\r\n  const handleSearchInputSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSearchFormOnSubmit(searchInputRef.current.value);\r\n    searchInputRef.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"function-btn-wrap\">\r\n      {/* row1 */}\r\n      <Row className=\"\">\r\n        <Col xs=\"12\" sm=\"6\" className=\"col\">\r\n          <div className=\"button-wrap\">\r\n            <Button\r\n              className=\"add-new-todo-btn\"\r\n              onClick={() => setAddBoxIsOpen(true)}\r\n            >\r\n              <i className=\"fas fa-plus\"></i>\r\n              Thêm công việc mới\r\n            </Button>\r\n\r\n            <ToggleThemeBtn\r\n              toggleTheme={toggleTheme}\r\n              isLightTheme={isLightTheme}\r\n              bgColorBtn={bgColorBtn}\r\n            />\r\n          </div>\r\n        </Col>\r\n\r\n        <Col xs=\"12\" sm=\"6\" className=\"col\">\r\n          <Form\r\n            className=\"search-form\"\r\n            onSubmit={(e) => handleSearchInputSubmit(e)}\r\n          >\r\n            <Button style={{ backgroundColor: bgColorBtn }} type=\"submit\">\r\n              <i className=\"fas fa-search\"></i>\r\n            </Button>\r\n            <Form.Control\r\n              style={{ backgroundColor: style.bgColor, color: style.color }}\r\n              ref={searchInputRef}\r\n              type=\"text\"\r\n              name=\"search\"\r\n              placeholder=\"Search level\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      {/* end of row1 */}\r\n\r\n      {/* row2  */}\r\n      <Row>\r\n        <Col xs=\"12\" sm=\"6\" className=\"col\">\r\n          <Form\r\n            action=\"\"\r\n            className=\"sort-todos-form\"\r\n            onSubmit={(e) =>\r\n              handleSortFormOnSubmit(e, selectSortRef.current.value)\r\n            }\r\n          >\r\n            <Button\r\n              style={{ backgroundColor: bgColorBtn }}\r\n              variant=\"info\"\r\n              type=\"submit\"\r\n            >\r\n              Sort\r\n            </Button>\r\n            <Form.Select\r\n              style={{ backgroundColor: style.bgColor, color: style.color }}\r\n              ref={selectSortRef}\r\n              name=\"sortTodos\"\r\n              id=\"sortTodos\"\r\n              className=\"sort-todos-wrap\"\r\n            >\r\n              <option default>Sort type</option>\r\n              {sortTypesList.map((sortType, index) => (\r\n                <option key={index} value={sortType}>\r\n                  {sortType}\r\n                </option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form>\r\n        </Col>\r\n        {/*  end of sort-todos-form  */}\r\n\r\n        {/*  sort-todos-form  */}\r\n        <Col xs=\"12\" sm=\"6\" className=\"col\">\r\n          <Form\r\n            action=\"\"\r\n            className=\"filter-todos-form\"\r\n            onSubmit={(e) =>\r\n              handleFilterFormOnSubmit(e, selectFilterRef.current.value)\r\n            }\r\n          >\r\n            <Button\r\n              style={{ backgroundColor: bgColorBtn }}\r\n              variant=\"info\"\r\n              type=\"submit\"\r\n            >\r\n              Filter\r\n            </Button>\r\n            <Form.Select\r\n              style={{ backgroundColor: style.bgColor, color: style.color }}\r\n              ref={selectFilterRef}\r\n              name=\"sortTodos\"\r\n              id=\"sortTodos\"\r\n              className=\"filter-todos-wrap\"\r\n            >\r\n              <option default>Filter level</option>\r\n              <option value=\"all\">All</option>\r\n              {optionLevels.map((filterType, index) => (\r\n                <option key={index} value={filterType.titleLevel}>\r\n                  {filterType.titleLevel}\r\n                </option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form>\r\n        </Col>\r\n        {/*  end of filter-todos-form  */}\r\n      </Row>\r\n      {/* end of row2 */}\r\n    </div>\r\n  );\r\n};\r\n\r\nFunctionBtnWrap.propTypes = {\r\n  sortTypesList: PropTypes.array,\r\n  optionLevels: PropTypes.array,\r\n  setAddBoxIsOpen: PropTypes.func,\r\n  handleSortFormOnSubmit: PropTypes.func,\r\n  handleFilterFormOnSubmit: PropTypes.func,\r\n  handleSearchFormOnSubmit: PropTypes.func,\r\n};\r\n\r\nexport default FunctionBtnWrap;\r\n","import { useEffect, useState, useContext } from \"react\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\n\r\n// import components\r\nimport AddTodoBox from \"./AddTodoBox\";\r\nimport TodoList from \"./TodoList\";\r\nimport FunctionBtnWrap from \"./FunctionBtnWrap\";\r\nimport { ThemeContext } from \"./contexts/ThemeContextProvider\";\r\n\r\n// import scss\r\nimport \"./App.scss\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction App() {\r\n  const { theme } = useContext(ThemeContext);\r\n  const { isLightTheme, ligthTheme, darkTheme } = theme;\r\n  const style = isLightTheme ? ligthTheme : darkTheme;\r\n\r\n  const [currentSortType, setCurrentSortType] = useState(\"\");\r\n  const [currentFilterType, setCurrentFilterType] = useState(\"\");\r\n\r\n  const sortTypesList = [\r\n    \"Tên: a-z\",\r\n    \"Tên: z-a\",\r\n    \"Mức độ: Tăng dần\",\r\n    \"Mức độ: Giảm dần\",\r\n  ];\r\n\r\n  const optionLevels = [\r\n    {\r\n      titleLevel: \"Không làm không sao\",\r\n      orderLevel: 3,\r\n      bgColor: \"success\",\r\n    },\r\n    {\r\n      titleLevel: \"Phải làm\",\r\n      orderLevel: 2,\r\n      bgColor: \"warning\",\r\n    },\r\n    {\r\n      titleLevel: \"Làm ngay\",\r\n      orderLevel: 1,\r\n      bgColor: \"danger\",\r\n    },\r\n  ];\r\n\r\n  const [todos, setTodos] = useState([]);\r\n  const [processedTodos, setProcessedTodos] = useState(todos);\r\n\r\n  useEffect(() => {\r\n    const localTodos = localStorage.getItem(\"todos\");\r\n    if (localTodos) {\r\n      setTodos(JSON.parse(localTodos));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const [newTodo, setNewTodo] = useState({\r\n    id: 0,\r\n    name: \"\",\r\n    level: optionLevels[0],\r\n  });\r\n\r\n  const [isEditting, setIsEditting] = useState(false);\r\n\r\n  const [addBoxIsOpen, setAddBoxIsOpen] = useState(false);\r\n\r\n  // handle edit or add todo when click submit form in AddTodoBox\r\n  // {isEditting\r\n  // ? (find index of edited todo in processedTodos, then replace tmpTodos to edited todo)\r\n  // : (add newTodo to the end of todos) }\r\n  const handleAddTodoBoxSubmit = () => {\r\n    if (isEditting) {\r\n      const tmpTodos = [...todos];\r\n      const index = todos.findIndex((todo) => todo.id === newTodo.id);\r\n      tmpTodos.splice(index, 1, newTodo);\r\n\r\n      setTodos(sorting(filtering(tmpTodos)));\r\n      setProcessedTodos([...tmpTodos]);\r\n      setIsEditting(false);\r\n    } else {\r\n      newTodo.id = uuidv1();\r\n      setTodos([...todos, newTodo]);\r\n      setProcessedTodos([...todos, newTodo]);\r\n    }\r\n\r\n    setNewTodo({\r\n      id: 0,\r\n      name: \"\",\r\n      level: optionLevels[0],\r\n    });\r\n  };\r\n\r\n  // handle when click \"Sửa\" button of todoItem in table todolist\r\n  // take a param and pass this param to setNewTodo\r\n  const handleSetIsEditting = (todo) => {\r\n    setNewTodo({\r\n      id: todo.id,\r\n      name: todo.name,\r\n      level: todo.level,\r\n    });\r\n    setIsEditting(true);\r\n    setAddBoxIsOpen(true);\r\n  };\r\n\r\n  // handle when click on \"Sort\" button in FunctionBtnWrap\r\n  // takes a param d pass this param to setCurrentSortType\r\n  const handleSortFormOnSubmit = (e, sortType) => {\r\n    e.preventDefault();\r\n    setCurrentSortType(sortType);\r\n  };\r\n\r\n  // handle when click on \"Filter\" button in FunctionBtnWrap\r\n  // takes a param and pass this param to setCurrentFilterType\r\n  const handleFilterFormOnSubmit = (e, filterType) => {\r\n    e.preventDefault();\r\n    setCurrentFilterType(filterType);\r\n  };\r\n\r\n  const handleSearchFormOnSubmit = (searchTerm) => {\r\n    const searchedTodos = [];\r\n    searchTerm = searchTerm.toLowerCase().trim();\r\n    todos.forEach((todo) => {\r\n      if (\r\n        todo.id.toString().includes(searchTerm) ||\r\n        todo.name.toLowerCase().includes(searchTerm) ||\r\n        todo.level.titleLevel.toLowerCase().includes(searchTerm)\r\n      ) {\r\n        searchedTodos.push(todo);\r\n      }\r\n    });\r\n    setProcessedTodos(sorting(filtering(searchedTodos)));\r\n  };\r\n\r\n  // handle sorting,\r\n  function sorting(Todos) {\r\n    const tmpTodos = [...Todos];\r\n    switch (currentSortType) {\r\n      case \"Tên: a-z\":\r\n        tmpTodos.sort((t1, t2) => {\r\n          let t1name = t1.name.toLowerCase();\r\n          let t2name = t2.name.toLowerCase();\r\n          if (t1name < t2name) {\r\n            return -1;\r\n          }\r\n          if (t1name > t2name) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n        break;\r\n\r\n      case \"Tên: z-a\":\r\n        tmpTodos.sort((t1, t2) => {\r\n          let t1name = t1.name.toLowerCase();\r\n          let t2name = t2.name.toLowerCase();\r\n          if (t1name > t2name) {\r\n            return -1;\r\n          }\r\n          if (t1name < t2name) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n        break;\r\n\r\n      case \"Mức độ: Tăng dần\":\r\n        tmpTodos.sort((t1, t2) => t2.level.orderLevel - t1.level.orderLevel);\r\n        break;\r\n\r\n      case \"Mức độ: Giảm dần\":\r\n        tmpTodos.sort((t1, t2) => t1.level.orderLevel - t2.level.orderLevel);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    // setProcessedTodos([...tmpTodos]);\r\n    return tmpTodos;\r\n  }\r\n\r\n  // handle filtering\r\n  function filtering(Todos) {\r\n    let tmpTodos = [];\r\n    if (\r\n      optionLevels.findIndex(\r\n        (level) => level.titleLevel === currentFilterType\r\n      ) !== -1\r\n    ) {\r\n      tmpTodos = Todos.filter(\r\n        (todo) => todo.level.titleLevel === currentFilterType\r\n      );\r\n    } else {\r\n      tmpTodos = [...Todos];\r\n    }\r\n    // setProcessedTodos(tmpTodos);\r\n    return tmpTodos;\r\n  }\r\n\r\n  // handle to remove the selected todo when click \"Xóa\" btn in TodoItem\r\n  function handleRemoveTodo(id) {\r\n    let newTodos = todos.filter((todo) => todo.id !== id);\r\n    setTodos([...newTodos]);\r\n  }\r\n\r\n  // handle change level of todo when click on level box in table\r\n  // take three params: changeType, todo, index\r\n  const handleChangeLevel = (changeType, todo, setUpLevel, setDownLevel) => {\r\n    let indexInOptionLevels = optionLevels.findIndex(\r\n      (item) => item.titleLevel === todo.level.titleLevel\r\n    );\r\n\r\n    switch (changeType) {\r\n      case \"Decrease\":\r\n        setUpLevel(0.8);\r\n        if (indexInOptionLevels === 0) {\r\n          setDownLevel(0.2);\r\n        } else if (indexInOptionLevels === 1) {\r\n          setDownLevel(0.2);\r\n          indexInOptionLevels -= 1;\r\n        } else {\r\n          indexInOptionLevels -= 1;\r\n        }\r\n        break;\r\n\r\n      case \"Increase\":\r\n        setDownLevel(0.8);\r\n        if (indexInOptionLevels === optionLevels.length - 1) {\r\n          setUpLevel(0.2);\r\n        } else if (indexInOptionLevels === optionLevels.length - 2) {\r\n          setUpLevel(0.2);\r\n          indexInOptionLevels += 1;\r\n        } else {\r\n          indexInOptionLevels += 1;\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    todo.level = optionLevels[indexInOptionLevels];\r\n    const tmpTodos = [...todos];\r\n    const index = todos.findIndex((item) => item.id === todo.id);\r\n    tmpTodos.splice(index, 1, todo);\r\n    setProcessedTodos(sorting(filtering(tmpTodos)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setProcessedTodos([...filtering(todos)]);\r\n  }, [todos.length, currentFilterType]);\r\n\r\n  useEffect(() => {\r\n    setProcessedTodos(sorting(todos));\r\n  }, [todos.length, currentSortType]);\r\n\r\n  return (\r\n    <div\r\n      className=\"app\"\r\n      style={{ backgroundColor: style.bgColor, color: style.color }}\r\n    >\r\n      <Container className=\"app\">\r\n        <h3 className=\"app-title\">LA's Task</h3>\r\n        <div className=\"app-content\">\r\n          {addBoxIsOpen ? (\r\n            <AddTodoBox\r\n              hidden={!addBoxIsOpen}\r\n              newTodo={newTodo}\r\n              isEditting={isEditting}\r\n              setIsEditting={setIsEditting}\r\n              optionLevels={optionLevels}\r\n              setNewTodo={setNewTodo}\r\n              setAddBoxIsOpen={setAddBoxIsOpen}\r\n              handleAddTodoBoxSubmit={handleAddTodoBoxSubmit}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <div className=\"todo-wrap\">\r\n            <FunctionBtnWrap\r\n              sortTypesList={sortTypesList}\r\n              optionLevels={optionLevels}\r\n              setAddBoxIsOpen={setAddBoxIsOpen}\r\n              handleSortFormOnSubmit={handleSortFormOnSubmit}\r\n              handleFilterFormOnSubmit={handleFilterFormOnSubmit}\r\n              handleSearchFormOnSubmit={handleSearchFormOnSubmit}\r\n            />\r\n\r\n            <TodoList\r\n              processedTodos={processedTodos}\r\n              optionLevels={optionLevels}\r\n              handleRemoveTodo={handleRemoveTodo}\r\n              handleSetIsEditting={handleSetIsEditting}\r\n              handleChangeLevel={handleChangeLevel}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"footer\">\r\n          <div className=\"footer__wrap\">\r\n            <a\r\n              target=\"_blank\"\r\n              href=\"https://www.facebook.com/leoasher.cf\"\r\n              className=\"footer-item\"\r\n            >\r\n              <img\r\n                className=\"footer-item-img\"\r\n                src=\"https://lh3.google.com/u/0/d/1PNXETFNzmfmedNjbo7_vOhkqDTZq8h78=w1062-h946-iv1\"\r\n                alt=\"\"\r\n              />\r\n              <div\r\n                className=\"title\"\r\n                style={{ backgroundColor: style.bgColorBtn }}\r\n              >\r\n                Follow my Facebook Page\r\n              </div>\r\n            </a>\r\n\r\n            <a\r\n              target=\"_blank\"\r\n              href=\"https://www.facebook.com/petsla.vn\"\r\n              className=\"footer-item\"\r\n            >\r\n              <img\r\n                className=\"footer-item-img\"\r\n                src=\"https://lh3.googleusercontent.com/fife/AAWUweUyi4_GyzgGGVscTgXSXBZW0tPqeZvqS_9IujbDDfs8DsKRZlAwi60nWr0mbybd9rmpj_vxHfFZVTgfzeAWlBhlmzATIflCNnvaRYHJgoIotUDxngRi0M_B96Xtm7VTkGZtocJA9JfZhrrDPCJkudvZ6sVLCMUNqiDjtcb7_0vmue77uTSWXK1LyLUsDOJaM7W0OVDws6IB5OGePdkUFG0D-ym1ECVE-c5GhZCkS9ugRQT2rfjMariy2ssRggp8lTPluonipjeRHooekjf6_r3b5ulUq1bkrMdxYpIRLeRjh7mTvXrXpxttszP3wmpcwJHy7xbc_Lcez03xL0rbQZwTwWeLEt7BgD7JTMtzXzubGDgVW6FzKF7eUhhQpyQWPfwdCkLAHrXflw7juz3hno8ubgx-0OpUyjJNidnbP1KsNaFdF3ENEINJMoGccRM3PbwQ111Llq1XCSCbiulUWqQwHJJMNO9Tel3FBNivotSXYy8Gx3nA5bfKUScdMSze7M1dTjzcvAFrSYSEH75T-aO86LYD1AnfAf9AufbMXnT_22rEeEOoVnxms2iqG0VYn9Mb2piihjIwOVyL5HqnkTjEyCsMX-buIl1jygrXBKSiD10zx-z2d4YEjBA99fZjsAPfAEsBz4ngukzOX1SdVnW6krBJZiYZyuaYNJb9iyF8GolVwQJtP-EULubPLzniZ225NkdQBZGF6Sb1nAEEwdoVRx5KY94cag=w1062-h946-ft\"\r\n                alt=\"\"\r\n              />\r\n\r\n              <div\r\n                className=\"title\"\r\n                style={{ backgroundColor: style.bgColorBtn }}\r\n              >\r\n                Follow my Facebook Page\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"./index.scss\";\r\nimport ThemeContextProvider from \"./contexts/ThemeContextProvider\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeContextProvider>\r\n      <App />\r\n    </ThemeContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}