{"version":3,"sources":["contexts/ThemeContextProvider.js","AddTodoBox/index.jsx","TodoItem/index.jsx","TodoList/index.jsx","FunctionBtnWrap/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","React","createContext","ThemeContextProvider","props","useState","isLightTheme","ligthTheme","bgColor","color","darkTheme","theme","setTheme","themeDatas","toggleTheme","newTheme","Provider","value","children","AddTodoBox","newTodo","isEditting","optionLevels","setNewTodo","setAddBoxIsOpen","handleAddTodoBoxSubmit","useContext","style","setInputIsEmpty","handleOnChange","e","target","name","JSON","parse","className","backgroundColor","Form","onClick","Group","md","controlId","Label","htmlFor","Control","required","type","id","onChange","placeholder","autoComplete","Feedback","Select","aria-label","stringify","level","map","option","index","titleLevel","action","preventDefault","trim","handleFormSubmit","TodoItem","todo","indexOfTodo","handleRemoveTodo","handleSetIsEditting","handleChangeLevel","Badge","bg","getBgColor","TodoList","processedTodos","Table","bordered","width","FunctionBtnWrap","sortTypesList","handleSortFormOnSubmit","handleFilterFormOnSubmit","handleSearchFormOnSubmit","selectSortRef","useRef","selectFilterRef","searchInputRef","Row","Col","xs","sm","Button","circleToggle","classList","toggle","console","log","handleToggleTheme","onSubmit","current","handleSearchInputSubmit","ref","variant","default","sortType","filterType","App","currentSortType","setCurrentSortType","currentFilterType","setCurrentFilterType","orderLevel","todos","setTodos","setProcessedTodos","setIsEditting","addBoxIsOpen","filtering","tmpTodos","findIndex","filter","useEffect","sort","t1","t2","t1name","toLowerCase","t2name","sorting","length","Container","hidden","splice","searchTerm","searchedTodos","forEach","toString","includes","push","newTodos","changeType","indexInOptionLevels","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63210fba.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const ThemeContext = React.createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n  const [theme, setTheme] = useState({\r\n    isLightTheme: false,\r\n    ligthTheme: {\r\n      bgColor: \"#fafafa\",\r\n      color: \"#111\",\r\n    },\r\n    darkTheme: {\r\n      bgColor: \"#333\",\r\n      color: \"#eee\",\r\n    },\r\n  });\r\n\r\n  const toggleTheme = () => {\r\n    let newTheme = { ...theme };\r\n    newTheme.isLightTheme = !newTheme.isLightTheme;\r\n    setTheme(newTheme);\r\n  };\r\n\r\n  const themeDatas = {\r\n    theme,\r\n    toggleTheme,\r\n  };\r\n  return (\r\n    <ThemeContext.Provider value={themeDatas}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n","import React, { useState, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./AddTodoBox.scss\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { ThemeContext } from \"../contexts/ThemeContextProvider\";\r\n\r\nconst AddTodoBox = (props) => {\r\n  const {\r\n    newTodo,\r\n    isEditting,\r\n    optionLevels,\r\n    setNewTodo,\r\n    setAddBoxIsOpen,\r\n    handleAddTodoBoxSubmit,\r\n  } = props;\r\n\r\n  const { theme } = useContext(ThemeContext);\r\n  const { isLightTheme, ligthTheme, darkTheme } = theme;\r\n  const style = isLightTheme ? ligthTheme : darkTheme;\r\n\r\n  const [inputIsEmpty, setInputIsEmpty] = useState(false);\r\n\r\n  // handle when form submitted\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (newTodo.name.trim() !== \"\") {\r\n      handleAddTodoBoxSubmit();\r\n\r\n      setAddBoxIsOpen(false);\r\n      setInputIsEmpty(false);\r\n    } else {\r\n      setInputIsEmpty(true);\r\n    }\r\n  };\r\n\r\n  // handle when input or select ele change\r\n  const handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setInputIsEmpty(false);\r\n\r\n    setNewTodo({\r\n      ...newTodo,\r\n      [name]: name === \"name\" ? value : JSON.parse(value),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"add-todo-box\"\r\n      style={{ backgroundColor: style.bgColor, color: style.color }}\r\n    >\r\n      <Form className=\"form-wrap\">\r\n        <span className=\"close-box\" onClick={() => setAddBoxIsOpen(false)}>\r\n          &times;\r\n        </span>\r\n        <h3 className=\"heading\">\r\n          {isEditting ? \"Edit công việc\" : \"Thêm công việc mới: \"}{\" \"}\r\n        </h3>\r\n        <Form.Group md=\"4\" className=\"form-gr\" controlId=\"validationCustom01\">\r\n          <Form.Label htmlFor=\"todoName\">Tên công việc</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            id=\"todoName\"\r\n            name=\"name\"\r\n            value={newTodo.name}\r\n            onChange={(e) => handleOnChange(e)}\r\n            placeholder=\"nhập công việc\"\r\n            autoComplete=\"off\"\r\n            style={{ backgroundColor: style.bgColor, color: style.color }}\r\n          />\r\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"form-gr\">\r\n          <Form.Label htmlFor=\"todoLevel\">Mức độ</Form.Label>\r\n          <Form.Select\r\n            aria-label=\"Default select example\"\r\n            id=\"todoLevel\"\r\n            name=\"level\"\r\n            value={JSON.stringify(newTodo.level)}\r\n            onChange={(e) => handleOnChange(e)}\r\n            style={{ backgroundColor: style.bgColor, color: style.color }}\r\n          >\r\n            {optionLevels.map((option, index) => (\r\n              <option key={index} value={JSON.stringify(option)}>\r\n                {option.titleLevel}{\" \"}\r\n              </option>\r\n            ))}\r\n          </Form.Select>\r\n        </Form.Group>\r\n      </Form>\r\n\r\n      <Form action=\"\" className=\"form-wrap\">\r\n        <div className=\"btn-wrap\">\r\n          <button type=\"submit\" onClick={(e) => handleFormSubmit(e)}>\r\n            {!isEditting ? \"Thêm\" : \"Save\"}\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              return setAddBoxIsOpen(false);\r\n            }}\r\n          >\r\n            Hủy bỏ\r\n          </button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddTodoBox.propTypes = {\r\n  newTodo: PropTypes.object,\r\n  isEditting: PropTypes.bool,\r\n  optionLevels: PropTypes.array,\r\n  setNewTodo: PropTypes.func,\r\n  setAddBoxIsOpen: PropTypes.func,\r\n  handleAddTodoBoxSubmit: PropTypes.func,\r\n};\r\n\r\nexport default AddTodoBox;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Badge } from \"react-bootstrap\";\r\n\r\nconst TodoItem = (props) => {\r\n  const {\r\n    todo,\r\n    indexOfTodo,\r\n    handleRemoveTodo,\r\n    handleSetIsEditting,\r\n    handleChangeLevel,\r\n  } = props;\r\n\r\n  const getBgColor = (titleLevel) => {\r\n    switch (titleLevel) {\r\n      case \"Không làm không sao\":\r\n        return \"success\";\r\n\r\n      case \"Phải làm\":\r\n        return \"warning\";\r\n\r\n      case \"Làm ngay\":\r\n        return \"danger\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <tr className=\"todo-item\">\r\n      <td>\r\n        <span>{indexOfTodo + 1}</span>\r\n      </td>\r\n      <td>\r\n        <span>{todo.name}</span>\r\n      </td>\r\n      <td className=\"level-box\">\r\n        <Badge bg={getBgColor(todo.level.titleLevel)}>\r\n          {todo.level.titleLevel}\r\n        </Badge>\r\n\r\n        <div className=\"change-level\">\r\n          <span\r\n            onClick={() => handleChangeLevel(\"Decrease\", todo, indexOfTodo)}\r\n          >\r\n            <i className=\"fas fa-chevron-up\"></i>\r\n          </span>\r\n          <span\r\n            onClick={() => handleChangeLevel(\"Increase\", todo, indexOfTodo)}\r\n          >\r\n            <i className=\"fas fa-chevron-down\"></i>\r\n          </span>\r\n        </div>\r\n      </td>\r\n      <td className=\"action-wrap \">\r\n        <button className=\"edit-todo\" onClick={() => handleSetIsEditting(todo)}>\r\n          Sửa\r\n        </button>\r\n        <button\r\n          className=\"remove-todo\"\r\n          onClick={(e) => handleRemoveTodo(todo.id)}\r\n        >\r\n          Xóa\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object,\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TodoItem from \"../TodoItem\";\r\nimport \"./TodoList.scss\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { ThemeContext } from \"../contexts/ThemeContextProvider\";\r\n\r\nconst TodoList = (props) => {\r\n  // const { todos, setTodos, handleSetIsEditting, optionLevels } = props;\r\n  const {\r\n    processedTodos,\r\n    handleRemoveTodo,\r\n    handleSetIsEditting,\r\n    handleChangeLevel,\r\n  } = props;\r\n\r\n  const { theme } = useContext(ThemeContext);\r\n  const { isLightTheme, ligthTheme, darkTheme } = theme;\r\n  const style = isLightTheme ? ligthTheme : darkTheme;\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      {/* <table border=\"1\" cellPadding=\"0\" cellSpacing=\"0\"> */}\r\n      <Table\r\n        bordered\r\n        style={{ backgroundColor: style.bgColor, color: style.color }}\r\n      >\r\n        <thead>\r\n          <tr className=\"table-header\">\r\n            <th width=\"30\" >STT</th>\r\n            <th width=\"250\" >Tên công việc</th>\r\n            <th width=\"250\" >Mức độ</th>\r\n            <th width=\"250\" >Hành động</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {processedTodos.map((todo, index) => (\r\n            <TodoItem\r\n              key={todo.id}\r\n              todo={todo}\r\n              indexOfTodo={index}\r\n              handleRemoveTodo={handleRemoveTodo}\r\n              handleSetIsEditting={handleSetIsEditting}\r\n              handleChangeLevel={handleChangeLevel}\r\n            />\r\n          ))}\r\n        </tbody>\r\n        {/* </table> */}\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nTodoList.propTypes = {\r\n  processedTodos: PropTypes.array,\r\n  handleRemoveTodo: PropTypes.func,\r\n  handleSetIsEditting: PropTypes.func,\r\n  handleChangeLevel: PropTypes.func,\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useRef, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./FunctionBtnWrap.scss\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { ThemeContext } from \"../contexts/ThemeContextProvider\";\r\n\r\nconst FunctionBtnWrap = (props) => {\r\n  const {\r\n    sortTypesList,\r\n    optionLevels,\r\n    setAddBoxIsOpen,\r\n    handleSortFormOnSubmit,\r\n    handleFilterFormOnSubmit,\r\n    handleSearchFormOnSubmit,\r\n  } = props;\r\n\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n  const { isLightTheme, ligthTheme, darkTheme } = theme;\r\n  const style = isLightTheme ? ligthTheme : darkTheme;\r\n\r\n  // declare DOM ref\r\n  const selectSortRef = useRef(null);\r\n  const selectFilterRef = useRef(null);\r\n  const searchInputRef = useRef(null);\r\n\r\n  const handleSearchInputSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSearchFormOnSubmit(searchInputRef.current.value);\r\n    searchInputRef.current.value = \"\";\r\n    console.log(searchInputRef.current.value);\r\n  };\r\n\r\n  const handleToggleTheme = (e) => {\r\n    const circleToggle = e.target;\r\n    circleToggle.classList.toggle(\"active\");\r\n    console.log(circleToggle);\r\n    toggleTheme();\r\n  };\r\n\r\n  return (\r\n    <div className=\"function-btn-wrap\">\r\n      {/* row1 */}\r\n      <Row className=\"mb-4\">\r\n        <Col xs=\"12\" sm=\"6\" className=\"col\">\r\n          <div className=\"button-wrap\">\r\n            <Button\r\n              className=\"add-new-todo-btn\"\r\n              onClick={() => setAddBoxIsOpen(true)}\r\n            >\r\n              <i className=\"fas fa-plus\"></i>\r\n              Thêm công việc mới\r\n            </Button>\r\n\r\n            <div className=\"toggle-theme\">\r\n              <div\r\n                className=\"circle\"\r\n                onClick={(e) => handleToggleTheme(e)}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n\r\n        <Col xs=\"12\" sm=\"6\" className=\"col\">\r\n          <Form\r\n            className=\"search-form\"\r\n            onSubmit={(e) => handleSearchInputSubmit(e)}\r\n          >\r\n            <Button type=\"submit\">\r\n              <i className=\"fas fa-search\"></i>\r\n            </Button>\r\n            <Form.Control\r\n              style={{ backgroundColor: style.bgColor, color: style.color }}\r\n              ref={searchInputRef}\r\n              type=\"text\"\r\n              name=\"search\"\r\n              placeholder=\"Search level\"\r\n            />\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      {/* end of row1 */}\r\n\r\n      {/* row2  */}\r\n      <Row>\r\n        <Col xs=\"12\" sm=\"6\" className=\"col\">\r\n          <Form\r\n            action=\"\"\r\n            className=\"sort-todos-form\"\r\n            onSubmit={(e) =>\r\n              handleSortFormOnSubmit(e, selectSortRef.current.value)\r\n            }\r\n          >\r\n            <Button variant=\"info\" type=\"submit\">\r\n              Sort\r\n            </Button>\r\n            <Form.Select\r\n              style={{ backgroundColor: style.bgColor, color: style.color }}\r\n              ref={selectSortRef}\r\n              name=\"sortTodos\"\r\n              id=\"sortTodos\"\r\n              className=\"sort-todos-wrap\"\r\n            >\r\n              <option default>Sort type</option>\r\n              {sortTypesList.map((sortType, index) => (\r\n                <option key={index} value={sortType}>\r\n                  {sortType}\r\n                </option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form>\r\n        </Col>\r\n        {/*  end of sort-todos-form  */}\r\n\r\n        {/*  sort-todos-form  */}\r\n        <Col xs=\"12\" sm=\"6\" className=\"col\">\r\n          <Form\r\n            action=\"\"\r\n            className=\"filter-todos-form\"\r\n            onSubmit={(e) =>\r\n              handleFilterFormOnSubmit(e, selectFilterRef.current.value)\r\n            }\r\n          >\r\n            <Button variant=\"info\" type=\"submit\">\r\n              Filter\r\n            </Button>\r\n            <Form.Select\r\n              style={{ backgroundColor: style.bgColor, color: style.color }}\r\n              ref={selectFilterRef}\r\n              name=\"sortTodos\"\r\n              id=\"sortTodos\"\r\n              className=\"filter-todos-wrap\"\r\n            >\r\n              <option default>Filter type</option>\r\n              <option value=\"all\">All</option>\r\n              {optionLevels.map((filterType, index) => (\r\n                <option key={index} value={filterType.titleLevel}>\r\n                  {filterType.titleLevel}\r\n                </option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form>\r\n        </Col>\r\n        {/*  end of filter-todos-form  */}\r\n      </Row>\r\n      {/* end of row2 */}\r\n    </div>\r\n  );\r\n};\r\n\r\nFunctionBtnWrap.propTypes = {\r\n  sortTypesList: PropTypes.array,\r\n  optionLevels: PropTypes.array,\r\n  setAddBoxIsOpen: PropTypes.func,\r\n  handleSortFormOnSubmit: PropTypes.func,\r\n  handleFilterFormOnSubmit: PropTypes.func,\r\n  handleSearchFormOnSubmit: PropTypes.func,\r\n};\r\n\r\nexport default FunctionBtnWrap;\r\n","import { useEffect, useState, useContext } from \"react\";\r\n\r\n// import components\r\nimport AddTodoBox from \"./AddTodoBox\";\r\nimport TodoList from \"./TodoList\";\r\nimport FunctionBtnWrap from \"./FunctionBtnWrap\";\r\nimport ThemeContextProvider, {\r\n  ThemeContext,\r\n} from \"./contexts/ThemeContextProvider\";\r\n\r\n// import scss\r\nimport \"./App.scss\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction App() {\r\n  const { theme } = useContext(ThemeContext);\r\n  const { isLightTheme, ligthTheme, darkTheme } = theme;\r\n  const style = isLightTheme ? ligthTheme : darkTheme;\r\n\r\n  const [currentSortType, setCurrentSortType] = useState(\"\");\r\n  const [currentFilterType, setCurrentFilterType] = useState(\"\");\r\n\r\n  const sortTypesList = [\r\n    \"Tên: a-z\",\r\n    \"Tên: z-a\",\r\n    \"Mức độ: Tăng dần\",\r\n    \"Mức độ: Giảm dần\",\r\n  ];\r\n\r\n  const optionLevels = [\r\n    {\r\n      titleLevel: \"Không làm không sao\",\r\n      orderLevel: 3,\r\n    },\r\n    {\r\n      titleLevel: \"Phải làm\",\r\n      orderLevel: 2,\r\n    },\r\n    {\r\n      titleLevel: \"Làm ngay\",\r\n      orderLevel: 1,\r\n    },\r\n  ];\r\n\r\n  const [todos, setTodos] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"b\",\r\n      level: optionLevels[0],\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"a\",\r\n      level: optionLevels[2],\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"c\",\r\n      level: optionLevels[1],\r\n    },\r\n  ]);\r\n\r\n  const [processedTodos, setProcessedTodos] = useState(todos);\r\n\r\n  const [newTodo, setNewTodo] = useState({\r\n    id: 0,\r\n    name: \"\",\r\n    level: optionLevels[0],\r\n  });\r\n\r\n  const [isEditting, setIsEditting] = useState(false);\r\n\r\n  const [addBoxIsOpen, setAddBoxIsOpen] = useState(false);\r\n\r\n  // handle edit or add todo when click submit form in AddTodoBox\r\n  // {isEditting\r\n  // ? (find index of edited todo in processedTodos, then replace tmpTodos to edited todo)\r\n  // : (add newTodo to the end of todos) }\r\n  const handleAddTodoBoxSubmit = () => {\r\n    if (isEditting) {\r\n      const tmpTodos = [...todos];\r\n      const index = processedTodos.findIndex((todo) => todo.id === newTodo.id);\r\n      tmpTodos.splice(index, 1, newTodo);\r\n\r\n      setProcessedTodos([...tmpTodos]);\r\n      setIsEditting(false);\r\n    } else {\r\n      newTodo.id = todos.length + 1;\r\n      setTodos([...todos, newTodo]);\r\n    }\r\n    setNewTodo({\r\n      id: 0,\r\n      name: \"\",\r\n      level: optionLevels[0],\r\n    });\r\n  };\r\n\r\n  // handle when click \"Sửa\" button of todoItem in table todolist\r\n  // take a param and pass this param to setNewTodo\r\n  const handleSetIsEditting = (todo) => {\r\n    setNewTodo({\r\n      id: todo.id,\r\n      name: todo.name,\r\n      level: todo.level,\r\n    });\r\n    setIsEditting(true);\r\n    setAddBoxIsOpen(true);\r\n  };\r\n\r\n  // handle when click on \"Sort\" button in FunctionBtnWrap\r\n  // takes a param d pass this param to setCurrentSortType\r\n  const handleSortFormOnSubmit = (e, sortType) => {\r\n    e.preventDefault();\r\n    setCurrentSortType(sortType);\r\n\r\n    // sorting();\r\n  };\r\n\r\n  // handle when click on \"Filter\" button in FunctionBtnWrap\r\n  // takes a param and pass this param to setCurrentFilterType\r\n  const handleFilterFormOnSubmit = (e, filterType) => {\r\n    e.preventDefault();\r\n    setCurrentFilterType(filterType);\r\n    filtering();\r\n  };\r\n\r\n  const handleSearchFormOnSubmit = (searchTerm) => {\r\n    const searchedTodos = [];\r\n    searchTerm = searchTerm.toLowerCase().trim();\r\n    todos.forEach((todo) => {\r\n      if (\r\n        todo.id.toString().includes(searchTerm) ||\r\n        todo.name.toLowerCase().includes(searchTerm) ||\r\n        todo.level.titleLevel.toLowerCase().includes(searchTerm)\r\n      ) {\r\n        searchedTodos.push(todo);\r\n      }\r\n    });\r\n\r\n    setProcessedTodos(searchedTodos);\r\n  };\r\n\r\n  // handle sorting,\r\n  function sorting() {\r\n    const tmpTodos = [...processedTodos];\r\n    switch (currentSortType) {\r\n      case \"Tên: a-z\":\r\n        tmpTodos.sort((t1, t2) => {\r\n          let t1name = t1.name.toLowerCase();\r\n          let t2name = t2.name.toLowerCase();\r\n          if (t1name < t2name) {\r\n            return -1;\r\n          }\r\n          if (t1name > t2name) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n        break;\r\n\r\n      case \"Tên: z-a\":\r\n        tmpTodos.sort((t1, t2) => {\r\n          let t1name = t1.name.toLowerCase();\r\n          let t2name = t2.name.toLowerCase();\r\n          if (t1name > t2name) {\r\n            return -1;\r\n          }\r\n          if (t1name < t2name) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n        break;\r\n\r\n      case \"Mức độ: Tăng dần\":\r\n        tmpTodos.sort((t1, t2) => t2.level.orderLevel - t1.level.orderLevel);\r\n        break;\r\n\r\n      case \"Mức độ: Giảm dần\":\r\n        tmpTodos.sort((t1, t2) => t1.level.orderLevel - t2.level.orderLevel);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setProcessedTodos(tmpTodos);\r\n  }\r\n\r\n  // handle filtering\r\n  function filtering() {\r\n    let tmpTodos = [];\r\n    if (\r\n      optionLevels.findIndex(\r\n        (level) => level.titleLevel === currentFilterType\r\n      ) !== -1\r\n    ) {\r\n      tmpTodos = todos.filter(\r\n        (todo) => todo.level.titleLevel === currentFilterType\r\n      );\r\n    } else {\r\n      tmpTodos = [...todos];\r\n    }\r\n    setProcessedTodos(tmpTodos);\r\n  }\r\n\r\n  // handle to remove the selected todo when click \"Xóa\" btn in TodoItem\r\n  function handleRemoveTodo(id) {\r\n    let newTodos = todos.filter((todo) => todo.id !== id);\r\n    setTodos([...newTodos]);\r\n  }\r\n\r\n  // handle change level of todo when click on level box in table\r\n  // take three params: changeType, todo, index\r\n  const handleChangeLevel = (changeType, todo, index) => {\r\n    let indexInOptionLevels = optionLevels.findIndex(\r\n      (item) => item.titleLevel === todo.level.titleLevel\r\n    );\r\n    switch (changeType) {\r\n      case \"Decrease\":\r\n        if (indexInOptionLevels === optionLevels.length - 1) {\r\n          indexInOptionLevels = 0;\r\n        } else {\r\n          indexInOptionLevels += 1;\r\n        }\r\n        break;\r\n\r\n      case \"Increase\":\r\n        indexInOptionLevels = (indexInOptionLevels + 1) % optionLevels.length;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    todo.level = optionLevels[indexInOptionLevels];\r\n    const tmpTodos = [...todos];\r\n    tmpTodos.splice(index, 1, todo);\r\n    setTodos([...tmpTodos]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    sorting();\r\n  }, [todos.length, currentSortType]);\r\n\r\n  useEffect(() => {\r\n    filtering();\r\n  }, [todos.length, currentFilterType]);\r\n\r\n  return (\r\n    <div\r\n      className=\"app\"\r\n      style={{ backgroundColor: style.bgColor, color: style.color }}\r\n    >\r\n      <Container className=\"app\">\r\n        <h3 className=\"app-title\">TodoList</h3>\r\n        <div className=\"app-content\">\r\n          {addBoxIsOpen ? (\r\n            <AddTodoBox\r\n              hidden={!addBoxIsOpen}\r\n              newTodo={newTodo}\r\n              isEditting={isEditting}\r\n              optionLevels={optionLevels}\r\n              setNewTodo={setNewTodo}\r\n              setAddBoxIsOpen={setAddBoxIsOpen}\r\n              handleAddTodoBoxSubmit={handleAddTodoBoxSubmit}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <div className=\"todo-wrap\">\r\n            <FunctionBtnWrap\r\n              sortTypesList={sortTypesList}\r\n              optionLevels={optionLevels}\r\n              setAddBoxIsOpen={setAddBoxIsOpen}\r\n              handleSortFormOnSubmit={handleSortFormOnSubmit}\r\n              handleFilterFormOnSubmit={handleFilterFormOnSubmit}\r\n              handleSearchFormOnSubmit={handleSearchFormOnSubmit}\r\n            />\r\n\r\n            <TodoList\r\n              processedTodos={processedTodos}\r\n              handleRemoveTodo={handleRemoveTodo}\r\n              handleSetIsEditting={handleSetIsEditting}\r\n              handleChangeLevel={handleChangeLevel}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"./index.scss\";\r\nimport ThemeContextProvider from \"./contexts/ThemeContextProvider\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeContextProvider>\r\n      <App />\r\n    </ThemeContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}