{"version":3,"sources":["contexts/ThemeContextProvider.js","AddTodoBox/index.jsx","TodoItem/index.jsx","TodoList/index.jsx","FunctionBtnWrap/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","React","createContext","ThemeContextProvider","props","useState","isLightTheme","ligthTheme","bgColor","color","darkTheme","theme","setTheme","useEffect","localTheme","localStorage","getItem","JSON","parse","setItem","stringify","themeDatas","toggleTheme","newTheme","Provider","value","children","AddTodoBox","newTodo","isEditting","optionLevels","setNewTodo","setAddBoxIsOpen","handleAddTodoBoxSubmit","useContext","style","setInputIsEmpty","handleOnChange","e","target","name","className","backgroundColor","Form","onClick","Group","md","controlId","Label","htmlFor","Control","required","type","id","onChange","placeholder","autoComplete","Feedback","Select","aria-label","level","map","option","index","titleLevel","action","preventDefault","trim","handleFormSubmit","TodoItem","todo","indexOfTodo","handleRemoveTodo","handleSetIsEditting","handleChangeLevel","Badge","bg","getBgColor","TodoList","processedTodos","Table","bordered","width","FunctionBtnWrap","sortTypesList","handleSortFormOnSubmit","handleFilterFormOnSubmit","handleSearchFormOnSubmit","selectSortRef","useRef","selectFilterRef","searchInputRef","Row","Col","xs","sm","Button","circleToggle","classList","toggle","console","log","handleToggleTheme","onSubmit","current","handleSearchInputSubmit","ref","variant","default","sortType","filterType","App","currentSortType","setCurrentSortType","currentFilterType","setCurrentFilterType","orderLevel","todos","setTodos","localTodos","length","setProcessedTodos","setIsEditting","addBoxIsOpen","filtering","tmpTodos","findIndex","filter","sort","t1","t2","t1name","toLowerCase","t2name","sorting","Container","hidden","splice","searchTerm","searchedTodos","forEach","toString","includes","push","newTodos","changeType","indexInOptionLevels","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b951b657.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport const ThemeContext = React.createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n  const [theme, setTheme] = useState({\r\n    isLightTheme: true,\r\n    ligthTheme: {\r\n      bgColor: \"#fafafa\",\r\n      color: \"#111\",\r\n    },\r\n    darkTheme: {\r\n      bgColor: \"#333\",\r\n      color: \"#eee\",\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    let localTheme = localStorage.getItem(\"Theme\");\r\n    if (localStorage) {\r\n      setTheme(JSON.parse(localTheme));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"Theme\", JSON.stringify(theme));\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    let newTheme = { ...theme };\r\n    newTheme.isLightTheme = !newTheme.isLightTheme;\r\n    setTheme(newTheme);\r\n  };\r\n\r\n  const themeDatas = {\r\n    theme,\r\n    toggleTheme,\r\n  };\r\n  return (\r\n    <ThemeContext.Provider value={themeDatas}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n","import React, { useState, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./AddTodoBox.scss\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { ThemeContext } from \"../contexts/ThemeContextProvider\";\r\n\r\nconst AddTodoBox = (props) => {\r\n  const {\r\n    newTodo,\r\n    isEditting,\r\n    optionLevels,\r\n    setNewTodo,\r\n    setAddBoxIsOpen,\r\n    handleAddTodoBoxSubmit,\r\n  } = props;\r\n\r\n  const { theme } = useContext(ThemeContext);\r\n  const { isLightTheme, ligthTheme, darkTheme } = theme;\r\n  const style = isLightTheme ? ligthTheme : darkTheme;\r\n\r\n  const [inputIsEmpty, setInputIsEmpty] = useState(false);\r\n\r\n  // handle when form submitted\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (newTodo.name.trim() !== \"\") {\r\n      handleAddTodoBoxSubmit();\r\n\r\n      setAddBoxIsOpen(false);\r\n      setInputIsEmpty(false);\r\n    } else {\r\n      setInputIsEmpty(true);\r\n    }\r\n  };\r\n\r\n  // handle when input or select ele change\r\n  const handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setInputIsEmpty(false);\r\n\r\n    setNewTodo({\r\n      ...newTodo,\r\n      [name]: name === \"name\" ? value : JSON.parse(value),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"add-todo-box\"\r\n      style={{ backgroundColor: style.bgColor, color: style.color }}\r\n    >\r\n      <Form className=\"form-wrap\">\r\n        <span className=\"close-box\" onClick={() => setAddBoxIsOpen(false)}>\r\n          &times;\r\n        </span>\r\n        <h3 className=\"heading\">\r\n          {isEditting ? \"Edit công việc\" : \"Thêm công việc mới: \"}{\" \"}\r\n        </h3>\r\n        <Form.Group md=\"4\" className=\"form-gr\" controlId=\"validationCustom01\">\r\n          <Form.Label htmlFor=\"todoName\">Tên công việc</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            id=\"todoName\"\r\n            name=\"name\"\r\n            value={newTodo.name}\r\n            onChange={(e) => handleOnChange(e)}\r\n            placeholder=\"nhập công việc\"\r\n            autoComplete=\"off\"\r\n            style={{ backgroundColor: style.bgColor, color: style.color }}\r\n          />\r\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"form-gr\">\r\n          <Form.Label htmlFor=\"todoLevel\">Mức độ</Form.Label>\r\n          <Form.Select\r\n            aria-label=\"Default select example\"\r\n            id=\"todoLevel\"\r\n            name=\"level\"\r\n            value={JSON.stringify(newTodo.level)}\r\n            onChange={(e) => handleOnChange(e)}\r\n            style={{ backgroundColor: style.bgColor, color: style.color }}\r\n          >\r\n            {optionLevels.map((option, index) => (\r\n              <option key={index} value={JSON.stringify(option)}>\r\n                {option.titleLevel}{\" \"}\r\n              </option>\r\n            ))}\r\n          </Form.Select>\r\n        </Form.Group>\r\n      </Form>\r\n\r\n      <Form action=\"\" className=\"form-wrap\">\r\n        <div className=\"btn-wrap\">\r\n          <button type=\"submit\" onClick={(e) => handleFormSubmit(e)}>\r\n            {!isEditting ? \"Thêm\" : \"Save\"}\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              return setAddBoxIsOpen(false);\r\n            }}\r\n          >\r\n            Hủy bỏ\r\n          </button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddTodoBox.propTypes = {\r\n  newTodo: PropTypes.object,\r\n  isEditting: PropTypes.bool,\r\n  optionLevels: PropTypes.array,\r\n  setNewTodo: PropTypes.func,\r\n  setAddBoxIsOpen: PropTypes.func,\r\n  handleAddTodoBoxSubmit: PropTypes.func,\r\n};\r\n\r\nexport default AddTodoBox;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Badge } from \"react-bootstrap\";\r\n\r\nconst TodoItem = (props) => {\r\n  const {\r\n    todo,\r\n    indexOfTodo,\r\n    handleRemoveTodo,\r\n    handleSetIsEditting,\r\n    handleChangeLevel,\r\n  } = props;\r\n\r\n  const getBgColor = (titleLevel) => {\r\n    switch (titleLevel) {\r\n      case \"Không làm không sao\":\r\n        return \"success\";\r\n\r\n      case \"Phải làm\":\r\n        return \"warning\";\r\n\r\n      case \"Làm ngay\":\r\n        return \"danger\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <tr className=\"todo-item\">\r\n      <td>\r\n        <span>{indexOfTodo + 1}</span>\r\n      </td>\r\n      <td>\r\n        <span>{todo.name}</span>\r\n      </td>\r\n      <td className=\"level-box\">\r\n        <Badge bg={getBgColor(todo.level.titleLevel)}>\r\n          {todo.level.titleLevel}\r\n        </Badge>\r\n\r\n        <div className=\"change-level\">\r\n          <span\r\n            onClick={() => handleChangeLevel(\"Decrease\", todo, indexOfTodo)}\r\n          >\r\n            <i className=\"fas fa-chevron-up\"></i>\r\n          </span>\r\n          <span\r\n            onClick={() => handleChangeLevel(\"Increase\", todo, indexOfTodo)}\r\n          >\r\n            <i className=\"fas fa-chevron-down\"></i>\r\n          </span>\r\n        </div>\r\n      </td>\r\n      <td className=\"action-wrap \">\r\n        <button className=\"edit-todo\" onClick={() => handleSetIsEditting(todo)}>\r\n          Sửa\r\n        </button>\r\n        <button\r\n          className=\"remove-todo\"\r\n          onClick={(e) => handleRemoveTodo(todo.id)}\r\n        >\r\n          Xóa\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object,\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TodoItem from \"../TodoItem\";\r\nimport \"./TodoList.scss\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { ThemeContext } from \"../contexts/ThemeContextProvider\";\r\n\r\nconst TodoList = (props) => {\r\n  // const { todos, setTodos, handleSetIsEditting, optionLevels } = props;\r\n  const {\r\n    processedTodos,\r\n    handleRemoveTodo,\r\n    handleSetIsEditting,\r\n    handleChangeLevel,\r\n  } = props;\r\n\r\n  const { theme } = useContext(ThemeContext);\r\n  const { isLightTheme, ligthTheme, darkTheme } = theme;\r\n  const style = isLightTheme ? ligthTheme : darkTheme;\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      {/* <table border=\"1\" cellPadding=\"0\" cellSpacing=\"0\"> */}\r\n      <Table\r\n        bordered\r\n        style={{ backgroundColor: style.bgColor, color: style.color }}\r\n      >\r\n        <thead>\r\n          <tr className=\"table-header\">\r\n            <th width=\"30\" >STT</th>\r\n            <th width=\"250\" >Tên công việc</th>\r\n            <th width=\"250\" >Mức độ</th>\r\n            <th width=\"250\" >Hành động</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {processedTodos.map((todo, index) => (\r\n            <TodoItem\r\n              key={todo.id}\r\n              todo={todo}\r\n              indexOfTodo={index}\r\n              handleRemoveTodo={handleRemoveTodo}\r\n              handleSetIsEditting={handleSetIsEditting}\r\n              handleChangeLevel={handleChangeLevel}\r\n            />\r\n          ))}\r\n        </tbody>\r\n        {/* </table> */}\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nTodoList.propTypes = {\r\n  processedTodos: PropTypes.array,\r\n  handleRemoveTodo: PropTypes.func,\r\n  handleSetIsEditting: PropTypes.func,\r\n  handleChangeLevel: PropTypes.func,\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useRef, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./FunctionBtnWrap.scss\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { ThemeContext } from \"../contexts/ThemeContextProvider\";\r\n\r\nconst FunctionBtnWrap = (props) => {\r\n  const {\r\n    sortTypesList,\r\n    optionLevels,\r\n    setAddBoxIsOpen,\r\n    handleSortFormOnSubmit,\r\n    handleFilterFormOnSubmit,\r\n    handleSearchFormOnSubmit,\r\n  } = props;\r\n\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n  const { isLightTheme, ligthTheme, darkTheme } = theme;\r\n  const style = isLightTheme ? ligthTheme : darkTheme;\r\n\r\n  // declare DOM ref\r\n  const selectSortRef = useRef(null);\r\n  const selectFilterRef = useRef(null);\r\n  const searchInputRef = useRef(null);\r\n\r\n  const handleSearchInputSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSearchFormOnSubmit(searchInputRef.current.value);\r\n    searchInputRef.current.value = \"\";\r\n    console.log(searchInputRef.current.value);\r\n  };\r\n\r\n  const handleToggleTheme = (e) => {\r\n    const circleToggle = e.target;\r\n    circleToggle.classList.toggle(\"active\");\r\n    console.log(circleToggle);\r\n    toggleTheme();\r\n  };\r\n\r\n  return (\r\n    <div className=\"function-btn-wrap\">\r\n      {/* row1 */}\r\n      <Row className=\"mb-4\">\r\n        <Col xs=\"12\" sm=\"6\" className=\"col\">\r\n          <div className=\"button-wrap\">\r\n            <Button\r\n              className=\"add-new-todo-btn\"\r\n              onClick={() => setAddBoxIsOpen(true)}\r\n            >\r\n              <i className=\"fas fa-plus\"></i>\r\n              Thêm công việc mới\r\n            </Button>\r\n\r\n            <div className=\"toggle-theme\">\r\n              <div\r\n                className=\"circle\"\r\n                onClick={(e) => handleToggleTheme(e)}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n\r\n        <Col xs=\"12\" sm=\"6\" className=\"col\">\r\n          <Form\r\n            className=\"search-form\"\r\n            onSubmit={(e) => handleSearchInputSubmit(e)}\r\n          >\r\n            <Button type=\"submit\">\r\n              <i className=\"fas fa-search\"></i>\r\n            </Button>\r\n            <Form.Control\r\n              style={{ backgroundColor: style.bgColor, color: style.color }}\r\n              ref={searchInputRef}\r\n              type=\"text\"\r\n              name=\"search\"\r\n              placeholder=\"Search level\"\r\n            />\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      {/* end of row1 */}\r\n\r\n      {/* row2  */}\r\n      <Row>\r\n        <Col xs=\"12\" sm=\"6\" className=\"col\">\r\n          <Form\r\n            action=\"\"\r\n            className=\"sort-todos-form\"\r\n            onSubmit={(e) =>\r\n              handleSortFormOnSubmit(e, selectSortRef.current.value)\r\n            }\r\n          >\r\n            <Button variant=\"info\" type=\"submit\">\r\n              Sort\r\n            </Button>\r\n            <Form.Select\r\n              style={{ backgroundColor: style.bgColor, color: style.color }}\r\n              ref={selectSortRef}\r\n              name=\"sortTodos\"\r\n              id=\"sortTodos\"\r\n              className=\"sort-todos-wrap\"\r\n            >\r\n              <option default>Sort type</option>\r\n              {sortTypesList.map((sortType, index) => (\r\n                <option key={index} value={sortType}>\r\n                  {sortType}\r\n                </option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form>\r\n        </Col>\r\n        {/*  end of sort-todos-form  */}\r\n\r\n        {/*  sort-todos-form  */}\r\n        <Col xs=\"12\" sm=\"6\" className=\"col\">\r\n          <Form\r\n            action=\"\"\r\n            className=\"filter-todos-form\"\r\n            onSubmit={(e) =>\r\n              handleFilterFormOnSubmit(e, selectFilterRef.current.value)\r\n            }\r\n          >\r\n            <Button variant=\"info\" type=\"submit\">\r\n              Filter\r\n            </Button>\r\n            <Form.Select\r\n              style={{ backgroundColor: style.bgColor, color: style.color }}\r\n              ref={selectFilterRef}\r\n              name=\"sortTodos\"\r\n              id=\"sortTodos\"\r\n              className=\"filter-todos-wrap\"\r\n            >\r\n              <option default>Filter type</option>\r\n              <option value=\"all\">All</option>\r\n              {optionLevels.map((filterType, index) => (\r\n                <option key={index} value={filterType.titleLevel}>\r\n                  {filterType.titleLevel}\r\n                </option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form>\r\n        </Col>\r\n        {/*  end of filter-todos-form  */}\r\n      </Row>\r\n      {/* end of row2 */}\r\n    </div>\r\n  );\r\n};\r\n\r\nFunctionBtnWrap.propTypes = {\r\n  sortTypesList: PropTypes.array,\r\n  optionLevels: PropTypes.array,\r\n  setAddBoxIsOpen: PropTypes.func,\r\n  handleSortFormOnSubmit: PropTypes.func,\r\n  handleFilterFormOnSubmit: PropTypes.func,\r\n  handleSearchFormOnSubmit: PropTypes.func,\r\n};\r\n\r\nexport default FunctionBtnWrap;\r\n","import { useEffect, useState, useContext } from \"react\";\r\n\r\n// import components\r\nimport AddTodoBox from \"./AddTodoBox\";\r\nimport TodoList from \"./TodoList\";\r\nimport FunctionBtnWrap from \"./FunctionBtnWrap\";\r\nimport ThemeContextProvider, {\r\n  ThemeContext,\r\n} from \"./contexts/ThemeContextProvider\";\r\n\r\n// import scss\r\nimport \"./App.scss\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction App() {\r\n  const { theme } = useContext(ThemeContext);\r\n  const { isLightTheme, ligthTheme, darkTheme } = theme;\r\n  const style = isLightTheme ? ligthTheme : darkTheme;\r\n\r\n  const [currentSortType, setCurrentSortType] = useState(\"\");\r\n  const [currentFilterType, setCurrentFilterType] = useState(\"\");\r\n\r\n  const sortTypesList = [\r\n    \"Tên: a-z\",\r\n    \"Tên: z-a\",\r\n    \"Mức độ: Tăng dần\",\r\n    \"Mức độ: Giảm dần\",\r\n  ];\r\n\r\n  const optionLevels = [\r\n    {\r\n      titleLevel: \"Không làm không sao\",\r\n      orderLevel: 3,\r\n    },\r\n    {\r\n      titleLevel: \"Phải làm\",\r\n      orderLevel: 2,\r\n    },\r\n    {\r\n      titleLevel: \"Làm ngay\",\r\n      orderLevel: 1,\r\n    },\r\n  ];\r\n\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let localTodos = localStorage.getItem(\"todos\");\r\n    if (localStorage) {\r\n      setTodos(JSON.parse(localTodos));\r\n    }\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos.length]);\r\n\r\n\r\n  const [processedTodos, setProcessedTodos] = useState(todos);\r\n\r\n  const [newTodo, setNewTodo] = useState({\r\n    id: 0,\r\n    name: \"\",\r\n    level: optionLevels[0],\r\n  });\r\n\r\n  const [isEditting, setIsEditting] = useState(false);\r\n\r\n  const [addBoxIsOpen, setAddBoxIsOpen] = useState(false);\r\n\r\n  // handle edit or add todo when click submit form in AddTodoBox\r\n  // {isEditting\r\n  // ? (find index of edited todo in processedTodos, then replace tmpTodos to edited todo)\r\n  // : (add newTodo to the end of todos) }\r\n  const handleAddTodoBoxSubmit = () => {\r\n    if (isEditting) {\r\n      const tmpTodos = [...todos];\r\n      const index = processedTodos.findIndex((todo) => todo.id === newTodo.id);\r\n      tmpTodos.splice(index, 1, newTodo);\r\n\r\n      setProcessedTodos([...tmpTodos]);\r\n      setIsEditting(false);\r\n    } else {\r\n      newTodo.id = todos.length + 1;\r\n      setTodos([...todos, newTodo]);\r\n    }\r\n    setNewTodo({\r\n      id: 0,\r\n      name: \"\",\r\n      level: optionLevels[0],\r\n    });\r\n  };\r\n\r\n  // handle when click \"Sửa\" button of todoItem in table todolist\r\n  // take a param and pass this param to setNewTodo\r\n  const handleSetIsEditting = (todo) => {\r\n    setNewTodo({\r\n      id: todo.id,\r\n      name: todo.name,\r\n      level: todo.level,\r\n    });\r\n    setIsEditting(true);\r\n    setAddBoxIsOpen(true);\r\n  };\r\n\r\n  // handle when click on \"Sort\" button in FunctionBtnWrap\r\n  // takes a param d pass this param to setCurrentSortType\r\n  const handleSortFormOnSubmit = (e, sortType) => {\r\n    e.preventDefault();\r\n    setCurrentSortType(sortType);\r\n\r\n    // sorting();\r\n  };\r\n\r\n  // handle when click on \"Filter\" button in FunctionBtnWrap\r\n  // takes a param and pass this param to setCurrentFilterType\r\n  const handleFilterFormOnSubmit = (e, filterType) => {\r\n    e.preventDefault();\r\n    setCurrentFilterType(filterType);\r\n    filtering();\r\n  };\r\n\r\n  const handleSearchFormOnSubmit = (searchTerm) => {\r\n    const searchedTodos = [];\r\n    searchTerm = searchTerm.toLowerCase().trim();\r\n    todos.forEach((todo) => {\r\n      if (\r\n        todo.id.toString().includes(searchTerm) ||\r\n        todo.name.toLowerCase().includes(searchTerm) ||\r\n        todo.level.titleLevel.toLowerCase().includes(searchTerm)\r\n      ) {\r\n        searchedTodos.push(todo);\r\n      }\r\n    });\r\n\r\n    setProcessedTodos(searchedTodos);\r\n  };\r\n\r\n  // handle sorting,\r\n  function sorting() {\r\n    const tmpTodos = [...processedTodos];\r\n    switch (currentSortType) {\r\n      case \"Tên: a-z\":\r\n        tmpTodos.sort((t1, t2) => {\r\n          let t1name = t1.name.toLowerCase();\r\n          let t2name = t2.name.toLowerCase();\r\n          if (t1name < t2name) {\r\n            return -1;\r\n          }\r\n          if (t1name > t2name) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n        break;\r\n\r\n      case \"Tên: z-a\":\r\n        tmpTodos.sort((t1, t2) => {\r\n          let t1name = t1.name.toLowerCase();\r\n          let t2name = t2.name.toLowerCase();\r\n          if (t1name > t2name) {\r\n            return -1;\r\n          }\r\n          if (t1name < t2name) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n        break;\r\n\r\n      case \"Mức độ: Tăng dần\":\r\n        tmpTodos.sort((t1, t2) => t2.level.orderLevel - t1.level.orderLevel);\r\n        break;\r\n\r\n      case \"Mức độ: Giảm dần\":\r\n        tmpTodos.sort((t1, t2) => t1.level.orderLevel - t2.level.orderLevel);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setProcessedTodos(tmpTodos);\r\n  }\r\n\r\n  // handle filtering\r\n  function filtering() {\r\n    let tmpTodos = [];\r\n    if (\r\n      optionLevels.findIndex(\r\n        (level) => level.titleLevel === currentFilterType\r\n      ) !== -1\r\n    ) {\r\n      tmpTodos = todos.filter(\r\n        (todo) => todo.level.titleLevel === currentFilterType\r\n      );\r\n    } else {\r\n      tmpTodos = [...todos];\r\n    }\r\n    setProcessedTodos(tmpTodos);\r\n  }\r\n\r\n  // handle to remove the selected todo when click \"Xóa\" btn in TodoItem\r\n  function handleRemoveTodo(id) {\r\n    let newTodos = todos.filter((todo) => todo.id !== id);\r\n    setTodos([...newTodos]);\r\n  }\r\n\r\n  // handle change level of todo when click on level box in table\r\n  // take three params: changeType, todo, index\r\n  const handleChangeLevel = (changeType, todo, index) => {\r\n    let indexInOptionLevels = optionLevels.findIndex(\r\n      (item) => item.titleLevel === todo.level.titleLevel\r\n    );\r\n    switch (changeType) {\r\n      case \"Decrease\":\r\n        if (indexInOptionLevels === optionLevels.length - 1) {\r\n          indexInOptionLevels = 0;\r\n        } else {\r\n          indexInOptionLevels += 1;\r\n        }\r\n        break;\r\n\r\n      case \"Increase\":\r\n        indexInOptionLevels = (indexInOptionLevels + 1) % optionLevels.length;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    todo.level = optionLevels[indexInOptionLevels];\r\n    const tmpTodos = [...todos];\r\n    tmpTodos.splice(index, 1, todo);\r\n    setTodos([...tmpTodos]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    sorting();\r\n  }, [todos.length, currentSortType]);\r\n\r\n  useEffect(() => {\r\n    filtering();\r\n  }, [todos.length, currentFilterType]);\r\n\r\n  return (\r\n    <div\r\n      className=\"app\"\r\n      style={{ backgroundColor: style.bgColor, color: style.color }}\r\n    >\r\n      <Container className=\"app\">\r\n        <h3 className=\"app-title\">TodoList</h3>\r\n        <div className=\"app-content\">\r\n          {addBoxIsOpen ? (\r\n            <AddTodoBox\r\n              hidden={!addBoxIsOpen}\r\n              newTodo={newTodo}\r\n              isEditting={isEditting}\r\n              optionLevels={optionLevels}\r\n              setNewTodo={setNewTodo}\r\n              setAddBoxIsOpen={setAddBoxIsOpen}\r\n              handleAddTodoBoxSubmit={handleAddTodoBoxSubmit}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <div className=\"todo-wrap\">\r\n            <FunctionBtnWrap\r\n              sortTypesList={sortTypesList}\r\n              optionLevels={optionLevels}\r\n              setAddBoxIsOpen={setAddBoxIsOpen}\r\n              handleSortFormOnSubmit={handleSortFormOnSubmit}\r\n              handleFilterFormOnSubmit={handleFilterFormOnSubmit}\r\n              handleSearchFormOnSubmit={handleSearchFormOnSubmit}\r\n            />\r\n\r\n            <TodoList\r\n              processedTodos={processedTodos}\r\n              handleRemoveTodo={handleRemoveTodo}\r\n              handleSetIsEditting={handleSetIsEditting}\r\n              handleChangeLevel={handleChangeLevel}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"./index.scss\";\r\nimport ThemeContextProvider from \"./contexts/ThemeContextProvider\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeContextProvider>\r\n      <App />\r\n    </ThemeContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}