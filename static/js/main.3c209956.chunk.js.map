{"version":3,"sources":["contexts/ThemeContextProvider.js","AddTodoBox/index.jsx","TodoItem/index.jsx","TodoList/index.jsx","ToggleThemeBtn/index.jsx","FunctionBtnWrap/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","React","createContext","ThemeContextProvider","props","useState","isLightTheme","ligthTheme","bgColor","color","bgColorBtn","darkTheme","theme","setTheme","useEffect","localTheme","localStorage","getItem","JSON","parse","setItem","stringify","themeDatas","toggleTheme","newTheme","Provider","value","children","AddTodoBox","newTodo","isEditting","setIsEditting","optionLevels","setNewTodo","setAddBoxIsOpen","handleAddTodoBoxSubmit","useContext","style","inputIsEmpty","setInputIsEmpty","handleOnChange","e","target","name","handleCloseBox","preventDefault","id","level","className","onClick","backgroundColor","Form","Group","md","Label","htmlFor","Control","required","type","onChange","placeholder","autoComplete","Select","map","option","index","titleLevel","trim","handleFormSubmit","TodoItem","todo","indexOfTodo","handleRemoveTodo","handleSetIsEditting","handleChangeLevel","disableUpLevel","setUpLevel","disableDownLevel","setDownLevel","findIndex","item","length","Badge","bg","opacity","TodoList","processedTodos","Table","bordered","borderColor","width","ToggleThemeBtn","ToggleThemeRef","useRef","current","classList","add","ref","toggle","FunctionBtnWrap","sortTypesList","handleSortFormOnSubmit","handleFilterFormOnSubmit","handleSearchFormOnSubmit","selectSortRef","selectFilterRef","searchInputRef","Row","Col","xs","sm","Button","onSubmit","handleSearchInputSubmit","action","variant","default","sortType","filterType","App","currentSortType","setCurrentSortType","currentFilterType","setCurrentFilterType","orderLevel","todos","setTodos","setProcessedTodos","localTodos","addBoxIsOpen","sorting","Todos","tmpTodos","sort","t1","t2","t1name","toLowerCase","t2name","filtering","filter","Container","hidden","splice","uuidv1","searchTerm","searchedTodos","forEach","toString","includes","push","newTodos","changeType","indexInOptionLevels","href","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c209956.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport const ThemeContext = React.createContext();\n\nconst ThemeContextProvider = (props) => {\n  const [theme, setTheme] = useState({\n    isLightTheme: true,\n    ligthTheme: {\n      bgColor: \"#f2f2f2\",\n      color: \"#111\",\n      bgColorBtn: \"#83D8FF\",\n    },\n    darkTheme: {\n      bgColor: \"#333\",\n      color: \"#eee\",\n      bgColorBtn: \"#749DD6\",\n    },\n  });\n\n  useEffect(() => {\n    let localTheme = localStorage.getItem(\"Theme\");\n    if (localTheme) {\n      setTheme(JSON.parse(localTheme));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"Theme\", JSON.stringify(theme));\n  }, [theme]);\n\n  const toggleTheme = () => {\n    let newTheme = { ...theme };\n    newTheme.isLightTheme = !newTheme.isLightTheme;\n    setTheme(newTheme);\n  };\n\n  const themeDatas = {\n    theme,\n    toggleTheme,\n  };\n  return (\n    <ThemeContext.Provider value={themeDatas}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContextProvider;\n","import React, { useContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./AddTodoBox.scss\";\nimport { Form } from \"react-bootstrap\";\nimport { ThemeContext } from \"../contexts/ThemeContextProvider\";\n\nconst AddTodoBox = (props) => {\n  const {\n    newTodo,\n    isEditting,\n    setIsEditting,\n    optionLevels,\n    setNewTodo,\n    setAddBoxIsOpen,\n    handleAddTodoBoxSubmit,\n  } = props;\n\n  const { theme } = useContext(ThemeContext);\n  const { isLightTheme, ligthTheme, darkTheme } = theme;\n  const style = isLightTheme ? ligthTheme : darkTheme;\n\n  const [inputIsEmpty, setInputIsEmpty] = useState(false);\n\n  // handle when form submitted\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    if (newTodo.name.trim() !== \"\") {\n      handleAddTodoBoxSubmit();\n\n      setAddBoxIsOpen(false);\n      setInputIsEmpty(false);\n    } else {\n      setInputIsEmpty(true);\n    }\n  };\n\n  // handle when input or select ele change\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n    setInputIsEmpty(false);\n\n    setNewTodo({\n      ...newTodo,\n      [name]: name === \"name\" ? value : JSON.parse(value),\n    });\n  };\n\n  const handleCloseBox = (e) => {\n    e.preventDefault();\n    setAddBoxIsOpen(false);\n    setIsEditting(false);\n    setNewTodo({\n      id: 0,\n      name: \"\",\n      level: optionLevels[0],\n    });\n  };\n\n  return (\n    <div className=\"add-todo-wrap\">\n      <div className=\"overlay\" onClick={() => setAddBoxIsOpen(false)}></div>\n      <div\n        className=\"add-todo-box\"\n        style={{ backgroundColor: style.bgColor, color: style.color }}\n      >\n        <Form className=\"form-wrap\">\n          <span className=\"close-box\" onClick={(e) => handleCloseBox(e)}>\n            &times;\n          </span>\n          <h3 className=\"heading\">\n            {isEditting ? \"Edit công việc\" : \"Thêm công việc mới: \"}{\" \"}\n          </h3>\n          <Form.Group md=\"4\" className=\"form-gr\">\n            <Form.Label htmlFor=\"todoName\">Tên công việc</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              id=\"todoName\"\n              name=\"name\"\n              value={newTodo.name}\n              onChange={(e) => handleOnChange(e)}\n              placeholder=\"Nhập công việc\"\n              autoComplete=\"off\"\n              style={{ backgroundColor: style.bgColor, color: style.color }}\n            />\n            {inputIsEmpty ? (\n              <div className=\"input-empty-alert\">\n                Tên công việc không được để trống!\n              </div>\n            ) : (\n              \"\"\n            )}\n          </Form.Group>\n\n          <Form.Group className=\"form-gr\">\n            <Form.Label htmlFor=\"todoLevel\">Mức độ</Form.Label>\n            <Form.Select\n              aria-label=\"Default select example\"\n              id=\"todoLevel\"\n              name=\"level\"\n              value={JSON.stringify(newTodo.level)}\n              onChange={(e) => handleOnChange(e)}\n              style={{ backgroundColor: style.bgColor, color: style.color }}\n            >\n              {optionLevels.map((option, index) => (\n                <option key={index} value={JSON.stringify(option)}>\n                  {option.titleLevel}{\" \"}\n                </option>\n              ))}\n            </Form.Select>\n          </Form.Group>\n\n          <div className=\"btn-wrap\">\n            <button type=\"submit\" onClick={(e) => handleFormSubmit(e)}>\n              {!isEditting ? \"Thêm\" : \"Save\"}\n            </button>\n            <button\n              onClick={(e) => {\n                return handleCloseBox(e);\n              }}\n            >\n              Hủy bỏ\n            </button>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nAddTodoBox.propTypes = {\n  newTodo: PropTypes.object,\n  isEditting: PropTypes.bool,\n  optionLevels: PropTypes.array,\n  setNewTodo: PropTypes.func,\n  setAddBoxIsOpen: PropTypes.func,\n  handleAddTodoBoxSubmit: PropTypes.func,\n};\n\nexport default AddTodoBox;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Badge } from \"react-bootstrap\";\n\nconst TodoItem = (props) => {\n  const {\n    todo,\n    indexOfTodo,\n    optionLevels,\n    handleRemoveTodo,\n    handleSetIsEditting,\n    handleChangeLevel,\n  } = props;\n\n  const [disableUpLevel, setUpLevel] = useState(0.8);\n  const [disableDownLevel, setDownLevel] = useState(0.8);\n\n  useEffect(() => {\n    const index = optionLevels.findIndex(\n      (item) => item.titleLevel === todo.level.titleLevel\n    );\n    setUpLevel(index === optionLevels.length - 1 ? 0.2 : 0.8);\n    setDownLevel(index === 0 ? 0.2 : 0.8);\n  }, []);\n\n  return (\n    <tr className=\"todo-item\">\n      <td>\n        <span>{indexOfTodo + 1}</span>\n      </td>\n      <td>\n        <span>{todo.name}</span>\n      </td>\n      <td className=\"level-box\">\n        <Badge bg={todo.level.bgColor}>{todo.level.titleLevel}</Badge>\n\n        <div className=\"change-level\">\n          <span\n            style={{ opacity: disableUpLevel }}\n            onClick={() =>\n              handleChangeLevel(\"Increase\", todo, setUpLevel, setDownLevel)\n            }\n          >\n            <i className=\"fas fa-chevron-up\"></i>\n          </span>\n          <span\n            style={{ opacity: disableDownLevel }}\n            onClick={() =>\n              handleChangeLevel(\"Decrease\", todo, setUpLevel, setDownLevel)\n            }\n          >\n            <i className=\"fas fa-chevron-down\"></i>\n          </span>\n        </div>\n      </td>\n      <td className=\"action-wrap \">\n        <button className=\"edit-todo\" onClick={() => handleSetIsEditting(todo)}>\n          <span>Sửa</span>\n        </button>\n        <button\n          className=\"remove-todo\"\n          onClick={() => handleRemoveTodo(todo.id)}\n        >\n          <span>Xóa</span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.object,\n};\n\nexport default TodoItem;\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport TodoItem from \"../TodoItem\";\nimport \"./TodoList.scss\";\nimport { Table } from \"react-bootstrap\";\nimport { ThemeContext } from \"../contexts/ThemeContextProvider\";\n\nconst TodoList = (props) => {\n  // const { todos, setTodos, handleSetIsEditting, optionLevels } = props;\n  const {\n    processedTodos,\n    optionLevels,\n    handleRemoveTodo,\n    handleSetIsEditting,\n    handleChangeLevel,\n  } = props;\n\n  const { theme } = useContext(ThemeContext);\n  const { isLightTheme, ligthTheme, darkTheme } = theme;\n  const style = isLightTheme ? ligthTheme : darkTheme;\n\n  return (\n    <div className=\"todo-list\">\n      {/* <table border=\"1\" cellPadding=\"0\" cellSpacing=\"0\"> */}\n      <Table\n        bordered\n        style={{ backgroundColor: style.bgColor, color: style.color, borderColor: \"#aaa\" }}\n      >\n        <thead>\n          <tr className=\"table-header\">\n            <th width=\"20\">STT</th>\n            <th width=\"250\">Tên công việc</th>\n            <th width=\"250\">Mức độ</th>\n            <th width=\"200\">Hành động</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {processedTodos.map((todo, index) => (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              indexOfTodo={index}\n              optionLevels={optionLevels}\n              handleRemoveTodo={handleRemoveTodo}\n              handleSetIsEditting={handleSetIsEditting}\n              handleChangeLevel={handleChangeLevel}\n            />\n          ))}\n        </tbody>\n        {/* </table> */}\n      </Table>\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  processedTodos: PropTypes.array,\n  handleRemoveTodo: PropTypes.func,\n  handleSetIsEditting: PropTypes.func,\n  handleChangeLevel: PropTypes.func,\n};\n\nexport default TodoList;\n","import React, { useRef, useEffect } from \"react\";\nimport \"./ToggleThemeBtn.scss\";\n\nconst ToggleThemeBtn = (props) => {\n  const { toggleTheme, isLightTheme, bgColorBtn } = props;\n\n  const ToggleThemeRef = useRef(null);\n\n  const handleToggleTheme = () => {\n    ToggleThemeRef.current.classList.toggle(\"active\");\n    toggleTheme();\n  };\n\n  useEffect(() => {\n    if (!isLightTheme) {\n      ToggleThemeRef.current.classList.add(\"active\");\n    }\n  }, [isLightTheme]);\n\n  return (\n    <div\n      ref={ToggleThemeRef}\n      htmlFor=\"dn\"\n      className=\"toggle\"\n      onClick={() => handleToggleTheme()}\n      style={{ backgroundColor: bgColorBtn }}\n    >\n      <div className=\"toggle__handler\">\n        <span className=\"crater crater--1\"></span>\n        <span className=\"crater crater--2\"></span>\n        <span className=\"crater crater--3\"></span>\n      </div>\n      <span className=\"star star--1\"></span>\n      <span className=\"star star--2\"></span>\n      <span className=\"star star--3\"></span>\n      <span className=\"star star--4\"></span>\n      <span className=\"star star--5\"></span>\n      <span className=\"star star--6\"></span>\n    </div>\n  );\n};\n\nexport default ToggleThemeBtn;\n","import React, { useRef, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./FunctionBtnWrap.scss\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { ThemeContext } from \"../contexts/ThemeContextProvider\";\nimport ToggleThemeBtn from \"../ToggleThemeBtn\";\n\nconst FunctionBtnWrap = (props) => {\n  const {\n    sortTypesList,\n    optionLevels,\n    setAddBoxIsOpen,\n    handleSortFormOnSubmit,\n    handleFilterFormOnSubmit,\n    handleSearchFormOnSubmit,\n  } = props;\n\n  const { theme, toggleTheme } = useContext(ThemeContext);\n  const { isLightTheme, ligthTheme, darkTheme } = theme;\n  const style = isLightTheme ? ligthTheme : darkTheme;\n\n  const bgColorBtn = isLightTheme ? \"#83D8FF\" : \"#749DD6\";\n\n  // declare DOM ref\n  const selectSortRef = useRef(null);\n  const selectFilterRef = useRef(null);\n  const searchInputRef = useRef(null);\n\n  const handleSearchInputSubmit = (e) => {\n    e.preventDefault();\n    handleSearchFormOnSubmit(searchInputRef.current.value);\n    searchInputRef.current.value = \"\";\n  };\n\n  return (\n    <div className=\"function-btn-wrap\">\n      {/* row1 */}\n      <Row className=\"\">\n        <Col xs=\"12\" sm=\"6\" className=\"col\">\n          <div className=\"button-wrap\">\n            <Button\n              className=\"add-new-todo-btn\"\n              onClick={() => setAddBoxIsOpen(true)}\n            >\n              <i className=\"fas fa-plus\"></i>\n              Thêm công việc mới\n            </Button>\n\n            <ToggleThemeBtn\n              toggleTheme={toggleTheme}\n              isLightTheme={isLightTheme}\n              bgColorBtn={bgColorBtn}\n            />\n          </div>\n        </Col>\n\n        <Col xs=\"12\" sm=\"6\" className=\"col\">\n          <Form\n            className=\"search-form\"\n            onSubmit={(e) => handleSearchInputSubmit(e)}\n          >\n            <Button style={{ backgroundColor: bgColorBtn }} type=\"submit\">\n              <i className=\"fas fa-search\"></i>\n            </Button>\n            <Form.Control\n              style={{ backgroundColor: style.bgColor, color: style.color }}\n              ref={searchInputRef}\n              type=\"text\"\n              name=\"search\"\n              placeholder=\"Search level\"\n              autoComplete=\"off\"\n            />\n          </Form>\n        </Col>\n      </Row>\n      {/* end of row1 */}\n\n      {/* row2  */}\n      <Row>\n        <Col xs=\"12\" sm=\"6\" className=\"col\">\n          <Form\n            action=\"\"\n            className=\"sort-todos-form\"\n            onSubmit={(e) =>\n              handleSortFormOnSubmit(e, selectSortRef.current.value)\n            }\n          >\n            <Button\n              style={{ backgroundColor: bgColorBtn }}\n              variant=\"info\"\n              type=\"submit\"\n            >\n              Sort\n            </Button>\n            <Form.Select\n              style={{ backgroundColor: style.bgColor, color: style.color }}\n              ref={selectSortRef}\n              name=\"sortTodos\"\n              id=\"sortTodos\"\n              className=\"sort-todos-wrap\"\n            >\n              <option default>Sort type</option>\n              {sortTypesList.map((sortType, index) => (\n                <option key={index} value={sortType}>\n                  {sortType}\n                </option>\n              ))}\n            </Form.Select>\n          </Form>\n        </Col>\n        {/*  end of sort-todos-form  */}\n\n        {/*  sort-todos-form  */}\n        <Col xs=\"12\" sm=\"6\" className=\"col\">\n          <Form\n            action=\"\"\n            className=\"filter-todos-form\"\n            onSubmit={(e) =>\n              handleFilterFormOnSubmit(e, selectFilterRef.current.value)\n            }\n          >\n            <Button\n              style={{ backgroundColor: bgColorBtn }}\n              variant=\"info\"\n              type=\"submit\"\n            >\n              Filter\n            </Button>\n            <Form.Select\n              style={{ backgroundColor: style.bgColor, color: style.color }}\n              ref={selectFilterRef}\n              name=\"sortTodos\"\n              id=\"sortTodos\"\n              className=\"filter-todos-wrap\"\n            >\n              <option default>Filter level</option>\n              <option value=\"all\">All</option>\n              {optionLevels.map((filterType, index) => (\n                <option key={index} value={filterType.titleLevel}>\n                  {filterType.titleLevel}\n                </option>\n              ))}\n            </Form.Select>\n          </Form>\n        </Col>\n        {/*  end of filter-todos-form  */}\n      </Row>\n      {/* end of row2 */}\n    </div>\n  );\n};\n\nFunctionBtnWrap.propTypes = {\n  sortTypesList: PropTypes.array,\n  optionLevels: PropTypes.array,\n  setAddBoxIsOpen: PropTypes.func,\n  handleSortFormOnSubmit: PropTypes.func,\n  handleFilterFormOnSubmit: PropTypes.func,\n  handleSearchFormOnSubmit: PropTypes.func,\n};\n\nexport default FunctionBtnWrap;\n","import { useEffect, useState, useContext } from \"react\";\nimport { v1 as uuidv1 } from \"uuid\";\n\n// import components\nimport AddTodoBox from \"./AddTodoBox\";\nimport TodoList from \"./TodoList\";\nimport FunctionBtnWrap from \"./FunctionBtnWrap\";\nimport { ThemeContext } from \"./contexts/ThemeContextProvider\";\n\n// import scss\nimport \"./App.scss\";\nimport { Container } from \"react-bootstrap\";\n\nfunction App() {\n  const { theme } = useContext(ThemeContext);\n  const { isLightTheme, ligthTheme, darkTheme } = theme;\n  const style = isLightTheme ? ligthTheme : darkTheme;\n\n  const [currentSortType, setCurrentSortType] = useState(\"\");\n  const [currentFilterType, setCurrentFilterType] = useState(\"\");\n\n  const sortTypesList = [\n    \"Tên: a-z\",\n    \"Tên: z-a\",\n    \"Mức độ: Tăng dần\",\n    \"Mức độ: Giảm dần\",\n  ];\n\n  const optionLevels = [\n    {\n      titleLevel: \"Không làm không sao\",\n      orderLevel: 3,\n      bgColor: \"success\",\n    },\n    {\n      titleLevel: \"Phải làm\",\n      orderLevel: 2,\n      bgColor: \"warning\",\n    },\n    {\n      titleLevel: \"Làm ngay\",\n      orderLevel: 1,\n      bgColor: \"danger\",\n    },\n  ];\n\n  const [todos, setTodos] = useState([]);\n  const [processedTodos, setProcessedTodos] = useState(todos);\n\n  useEffect(() => {\n    const localTodos = localStorage.getItem(\"todos\");\n    if (localTodos) {\n      setTodos(JSON.parse(localTodos));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  const [newTodo, setNewTodo] = useState({\n    id: 0,\n    name: \"\",\n    level: optionLevels[0],\n  });\n\n  const [isEditting, setIsEditting] = useState(false);\n\n  const [addBoxIsOpen, setAddBoxIsOpen] = useState(false);\n\n  // handle edit or add todo when click submit form in AddTodoBox\n  // {isEditting\n  // ? (find index of edited todo in processedTodos, then replace tmpTodos to edited todo)\n  // : (add newTodo to the end of todos) }\n  const handleAddTodoBoxSubmit = () => {\n    if (isEditting) {\n      const tmpTodos = [...todos];\n      const index = todos.findIndex((todo) => todo.id === newTodo.id);\n      tmpTodos.splice(index, 1, newTodo);\n\n      setTodos(sorting(filtering(tmpTodos)));\n      setProcessedTodos([...tmpTodos]);\n      setIsEditting(false);\n    } else {\n      newTodo.id = uuidv1();\n      setTodos([...todos, newTodo]);\n      setProcessedTodos([...todos, newTodo]);\n    }\n\n    setNewTodo({\n      id: 0,\n      name: \"\",\n      level: optionLevels[0],\n    });\n  };\n\n  // handle when click \"Sửa\" button of todoItem in table todolist\n  // take a param and pass this param to setNewTodo\n  const handleSetIsEditting = (todo) => {\n    setNewTodo({\n      id: todo.id,\n      name: todo.name,\n      level: todo.level,\n    });\n    setIsEditting(true);\n    setAddBoxIsOpen(true);\n  };\n\n  // handle when click on \"Sort\" button in FunctionBtnWrap\n  // takes a param d pass this param to setCurrentSortType\n  const handleSortFormOnSubmit = (e, sortType) => {\n    e.preventDefault();\n    setCurrentSortType(sortType);\n  };\n\n  // handle when click on \"Filter\" button in FunctionBtnWrap\n  // takes a param and pass this param to setCurrentFilterType\n  const handleFilterFormOnSubmit = (e, filterType) => {\n    e.preventDefault();\n    setCurrentFilterType(filterType);\n  };\n\n  const handleSearchFormOnSubmit = (searchTerm) => {\n    const searchedTodos = [];\n    searchTerm = searchTerm.toLowerCase().trim();\n    todos.forEach((todo) => {\n      if (\n        todo.id.toString().includes(searchTerm) ||\n        todo.name.toLowerCase().includes(searchTerm) ||\n        todo.level.titleLevel.toLowerCase().includes(searchTerm)\n      ) {\n        searchedTodos.push(todo);\n      }\n    });\n    setProcessedTodos(sorting(filtering(searchedTodos)));\n  };\n\n  // handle sorting,\n  function sorting(Todos) {\n    const tmpTodos = [...Todos];\n    switch (currentSortType) {\n      case \"Tên: a-z\":\n        tmpTodos.sort((t1, t2) => {\n          let t1name = t1.name.toLowerCase();\n          let t2name = t2.name.toLowerCase();\n          if (t1name < t2name) {\n            return -1;\n          }\n          if (t1name > t2name) {\n            return 1;\n          }\n          return 0;\n        });\n        break;\n\n      case \"Tên: z-a\":\n        tmpTodos.sort((t1, t2) => {\n          let t1name = t1.name.toLowerCase();\n          let t2name = t2.name.toLowerCase();\n          if (t1name > t2name) {\n            return -1;\n          }\n          if (t1name < t2name) {\n            return 1;\n          }\n          return 0;\n        });\n        break;\n\n      case \"Mức độ: Tăng dần\":\n        tmpTodos.sort((t1, t2) => t2.level.orderLevel - t1.level.orderLevel);\n        break;\n\n      case \"Mức độ: Giảm dần\":\n        tmpTodos.sort((t1, t2) => t1.level.orderLevel - t2.level.orderLevel);\n        break;\n\n      default:\n        break;\n    }\n    // setProcessedTodos([...tmpTodos]);\n    return tmpTodos;\n  }\n\n  // handle filtering\n  function filtering(Todos) {\n    let tmpTodos = [];\n    if (\n      optionLevels.findIndex(\n        (level) => level.titleLevel === currentFilterType\n      ) !== -1\n    ) {\n      tmpTodos = Todos.filter(\n        (todo) => todo.level.titleLevel === currentFilterType\n      );\n    } else {\n      tmpTodos = [...Todos];\n    }\n    // setProcessedTodos(tmpTodos);\n    return tmpTodos;\n  }\n\n  // handle to remove the selected todo when click \"Xóa\" btn in TodoItem\n  function handleRemoveTodo(id) {\n    let newTodos = todos.filter((todo) => todo.id !== id);\n    setTodos([...newTodos]);\n  }\n\n  // handle change level of todo when click on level box in table\n  // take three params: changeType, todo, index\n  const handleChangeLevel = (changeType, todo, setUpLevel, setDownLevel) => {\n    let indexInOptionLevels = optionLevels.findIndex(\n      (item) => item.titleLevel === todo.level.titleLevel\n    );\n\n    switch (changeType) {\n      case \"Decrease\":\n        setUpLevel(0.8);\n        if (indexInOptionLevels === 0) {\n          setDownLevel(0.2);\n        } else if (indexInOptionLevels === 1) {\n          setDownLevel(0.2);\n          indexInOptionLevels -= 1;\n        } else {\n          indexInOptionLevels -= 1;\n        }\n        break;\n\n      case \"Increase\":\n        setDownLevel(0.8);\n        if (indexInOptionLevels === optionLevels.length - 1) {\n          setUpLevel(0.2);\n        } else if (indexInOptionLevels === optionLevels.length - 2) {\n          setUpLevel(0.2);\n          indexInOptionLevels += 1;\n        } else {\n          indexInOptionLevels += 1;\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    todo.level = optionLevels[indexInOptionLevels];\n    const tmpTodos = [...todos];\n    const index = todos.findIndex((item) => item.id === todo.id);\n    tmpTodos.splice(index, 1, todo);\n    setProcessedTodos(sorting(filtering(tmpTodos)));\n  };\n\n  useEffect(() => {\n    setProcessedTodos([...filtering(todos)]);\n  }, [todos.length, currentFilterType]);\n\n  useEffect(() => {\n    setProcessedTodos(sorting(todos));\n  }, [todos.length, currentSortType]);\n\n  return (\n    <div\n      className=\"app\"\n      style={{ backgroundColor: style.bgColor, color: style.color }}\n    >\n      <Container className=\"app\">\n        <h3 className=\"app-title\">LA's Task</h3>\n        <div className=\"app-content\">\n          {addBoxIsOpen ? (\n            <AddTodoBox\n              hidden={!addBoxIsOpen}\n              newTodo={newTodo}\n              isEditting={isEditting}\n              setIsEditting={setIsEditting}\n              optionLevels={optionLevels}\n              setNewTodo={setNewTodo}\n              setAddBoxIsOpen={setAddBoxIsOpen}\n              handleAddTodoBoxSubmit={handleAddTodoBoxSubmit}\n            />\n          ) : (\n            \"\"\n          )}\n\n          <div className=\"todo-wrap\">\n            <FunctionBtnWrap\n              sortTypesList={sortTypesList}\n              optionLevels={optionLevels}\n              setAddBoxIsOpen={setAddBoxIsOpen}\n              handleSortFormOnSubmit={handleSortFormOnSubmit}\n              handleFilterFormOnSubmit={handleFilterFormOnSubmit}\n              handleSearchFormOnSubmit={handleSearchFormOnSubmit}\n            />\n\n            <TodoList\n              processedTodos={processedTodos}\n              optionLevels={optionLevels}\n              handleRemoveTodo={handleRemoveTodo}\n              handleSetIsEditting={handleSetIsEditting}\n              handleChangeLevel={handleChangeLevel}\n            />\n          </div>\n        </div>\n        <div className=\"footer\">\n          <div className=\"footer__wrap\">\n            <a\n              target=\"_blank\"\n              href=\"https://www.facebook.com/leoasher.dev\"\n              className=\"footer-item\"\n            >\n              <img className=\"footer-item-img\" src=\"./img/leoasher.png\" alt=\"\" />\n              <div\n                className=\"title\"\n                style={{ backgroundColor: style.bgColorBtn }}\n              >\n                Follow my Facebook Page\n              </div>\n            </a>\n\n            <a\n              target=\"_blank\"\n              href=\"https://www.facebook.com/petsla.cf\"\n              className=\"footer-item\"\n            >\n\n              <img className=\"footer-item-img\" src=\"./img/petsla1.png\" alt=\"\" />\n              <div\n                className=\"title\"\n                style={{ backgroundColor: style.bgColorBtn }}\n              >\n                Follow my Facebook Page\n              </div>\n            </a>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.scss\";\nimport ThemeContextProvider from \"./contexts/ThemeContextProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeContextProvider>\n      <App />\n    </ThemeContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}